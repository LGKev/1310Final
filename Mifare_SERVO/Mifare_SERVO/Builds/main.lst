   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 109               	.global	initServo
 111               	initServo:
   1:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** /*
   2:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  correctly reading tags now.
   3:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  on 3/17 this was working.
   4:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
   5:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  I am modifying it now to see if i can get a servo to turn with a card read.
   6:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
   7:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  * main.c
   8:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  *
   9:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  * Copyright 2013 Shimon <shimon@monistit.com>
  10:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  11:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  base code from Shimon to get the spi and rfid working. I added the servo support and implimented s
  12:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  13:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  the AVR requires a .1uF capacitor on power and ground. Without it the avr would randomly restart. 
  14:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  15:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  x*/
  16:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  17:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <avr/io.h>
  18:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <util/delay.h>
  19:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <lcd.h>
  20:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <utils.h>
  21:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <spi.h>
  22:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <mfrc522.h>
  23:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <string.h>
  24:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  25:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define BV(x) (1<<x)     // shifts bits by x. and sets the bit to 1 or 0 based on x 0 is zero shift
  26:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define ToggleBit(port, bit) (port ^= (1 << bit) //  toggles the bit by negating
  27:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  28:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define button 3 //that is the pin on portc that is input for button
  29:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define ledB 2 //led for indicator for button
  30:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  31:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** uint8_t SelfTestBuffer[64];
  32:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  33:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     /* === === ===    SERVO SETUP   === === === */
  34:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     /*
  35:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      pin PB1 using 16 bit timer
  36:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      Read servo example that I have in xcode.
  37:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  38:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      to move the servo to max:
  39:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  40:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  41:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      OCR1A = ICR1 - 2000; //18000
  42:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      _delay_ms(500);
  43:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  44:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      to move servo to min
  45:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      OCR1A = ICR1 - 1000; //1000 milisecond
  46:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      _delay_ms(500);
  47:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  48:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  49:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      cannot use timer 1 because its used for spi. so we have to use timer 2 or do all software
  50:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  51:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  52:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      */
  53:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  54:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //void buttonInit(volatile uint8_t *port, int pin){
  55:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    
  56:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //}
  57:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  58:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //void buttonRead(){
  59:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    //button is hardware debounced.
  60:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    
  61:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //}
  62:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  63:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //RFID constants
  64:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //holds id cards
  65:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** uint8_t card1[16] = {174,68,45,91,156}; //only 5 elements!!!
  66:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int validCard = -2;
  67:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  68:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  69:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** void initServo(){
 113               	.LM0:
 114               	.LFBB1:
 115               	/* prologue: function */
 116               	/* frame size = 0 */
 117               	/* stack size = 0 */
 118               	.L__stack_usage = 0
  70:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            //make A5 output.
  71:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            *ddr=BV(pin);      // PORTC declared as output 0xFF is all output 11111 so i have 8 b
  72:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            *port=BV(pin);     // PORTC is initially LOW OFF the led initially /
  73:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //to do make the register parameter work
  74:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  75:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     DDRC = BV(5);
 120               	.LM1:
 121 0000 90E2      		ldi r25,lo8(32)
 122 0002 97B9      		out 0x7,r25
  76:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         //set to closed position
  77:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         PORTC = (BV(5));
 124               	.LM2:
 125 0004 98B9      		out 0x8,r25
 126               	.LBB94:
 127               	.LBB95:
 129               	.Ltext1:
   1:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** _delay_us(double __us)
 256:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	double __tmp ;
 258:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 262:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 263:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 264:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 274:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 131               	.LM3:
 132 0006 EFEC      		ldi r30,lo8(1999)
 133 0008 F7E0      		ldi r31,hi8(1999)
 134 000a 3197      	1:	sbiw r30,1
 135 000c 01F4      		brne 1b
 136 000e 00C0      		rjmp .
 137 0010 0000      		nop
 138               	.LBE95:
 139               	.LBE94:
 141               	.Ltext2:
  78:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_us(1000);
  79:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         PORTC   ^=BV(5);
 143               	.LM4:
 144 0012 88B1      		in r24,0x8
 145 0014 8927      		eor r24,r25
 146 0016 88B9      		out 0x8,r24
 147               	.LBB96:
 148               	.LBB97:
 150               	.Ltext3:
 152               	.LM5:
 153 0018 8FE6      		ldi r24,lo8(-27537)
 154 001a 94E9      		ldi r25,hi8(-27537)
 155 001c 0197      	1:	sbiw r24,1
 156 001e 01F4      		brne 1b
 157 0020 00C0      		rjmp .
 158 0022 0000      		nop
 159 0024 0895      		ret
 160               	.LBE97:
 161               	.LBE96:
 163               	.Lscope1:
 165               	.global	open
 167               	open:
 169               	.Ltext4:
  80:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_us(19000); //remember that total period is 2ms or 2k micros and you need to do it th
  81:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
  82:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  83:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int open(){
 171               	.LM6:
 172               	.LFBB2:
 173               	/* prologue: function */
 174               	/* frame size = 0 */
 175               	/* stack size = 0 */
 176               	.L__stack_usage = 0
  84:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        *port = (uint8_t)(BV(pin)); //need to change this code to work
  85:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(2000);
  86:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port   ^=BV(pin);
  87:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(18000);
  88:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //
  89:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_ms(4000);
  90:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //
  91:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port = (BV(pin));
  92:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(1000);
  93:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port   ^=BV(pin);
  94:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(19000);
  95:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
  96:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     PORTC = (BV(5));
 178               	.LM7:
 179 0026 80E2      		ldi r24,lo8(32)
 180 0028 88B9      		out 0x8,r24
 181               	.LBB98:
 182               	.LBB99:
 184               	.Ltext5:
 186               	.LM8:
 187 002a EFE9      		ldi r30,lo8(3999)
 188 002c FFE0      		ldi r31,hi8(3999)
 189 002e 3197      	1:	sbiw r30,1
 190 0030 01F4      		brne 1b
 191 0032 00C0      		rjmp .
 192 0034 0000      		nop
 193               	.LBE99:
 194               	.LBE98:
 196               	.Ltext6:
  97:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(2000);
  98:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC  ^=BV(5);
 198               	.LM9:
 199 0036 98B1      		in r25,0x8
 200 0038 9827      		eor r25,r24
 201 003a 98B9      		out 0x8,r25
 202               	.LBB100:
 203               	.LBB101:
 205               	.Ltext7:
 207               	.LM10:
 208 003c EFE9      		ldi r30,lo8(-29537)
 209 003e FCE8      		ldi r31,hi8(-29537)
 210 0040 3197      	1:	sbiw r30,1
 211 0042 01F4      		brne 1b
 212 0044 00C0      		rjmp .
 213 0046 0000      		nop
 214               	.LBE101:
 215               	.LBE100:
 216               	.LBB102:
 217               	.LBB103:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 219               	.LM11:
 220 0048 FFEF      		ldi r31,lo8(6399999)
 221 004a 27EA      		ldi r18,hi8(6399999)
 222 004c 31E6      		ldi r19,hlo8(6399999)
 223 004e F150      	1:	subi r31,1
 224 0050 2040      		sbci r18,0
 225 0052 3040      		sbci r19,0
 226 0054 01F4      		brne 1b
 227 0056 00C0      		rjmp .
 228 0058 0000      		nop
 229               	.LBE103:
 230               	.LBE102:
 232               	.Ltext8:
  99:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(18000);
 100:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 101:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(4000);
 102:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 103:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC = (BV(5));
 234               	.LM12:
 235 005a 88B9      		out 0x8,r24
 236               	.LBB104:
 237               	.LBB105:
 239               	.Ltext9:
 241               	.LM13:
 242 005c EFEC      		ldi r30,lo8(1999)
 243 005e F7E0      		ldi r31,hi8(1999)
 244 0060 3197      	1:	sbiw r30,1
 245 0062 01F4      		brne 1b
 246 0064 00C0      		rjmp .
 247 0066 0000      		nop
 248               	.LBE105:
 249               	.LBE104:
 251               	.Ltext10:
 104:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(1000);
 105:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC   ^=BV(5);
 253               	.LM14:
 254 0068 98B1      		in r25,0x8
 255 006a 8927      		eor r24,r25
 256 006c 88B9      		out 0x8,r24
 257               	.LBB106:
 258               	.LBB107:
 260               	.Ltext11:
 262               	.LM15:
 263 006e 8FE6      		ldi r24,lo8(-27537)
 264 0070 94E9      		ldi r25,hi8(-27537)
 265 0072 0197      	1:	sbiw r24,1
 266 0074 01F4      		brne 1b
 267 0076 00C0      		rjmp .
 268 0078 0000      		nop
 269               	.LBE107:
 270               	.LBE106:
 272               	.Ltext12:
 106:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(19000);
 107:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** return 1;
 108:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }
 274               	.LM16:
 275 007a 81E0      		ldi r24,lo8(1)
 276 007c 90E0      		ldi r25,0
 277 007e 0895      		ret
 279               	.Lscope2:
 281               	.global	close
 283               	close:
 109:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 110:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int close(void){
 285               	.LM17:
 286               	.LFBB3:
 287               	/* prologue: function */
 288               	/* frame size = 0 */
 289               	/* stack size = 0 */
 290               	.L__stack_usage = 0
 111:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //ToDo: need to update this
 112:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         return 1;
 113:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
 292               	.LM18:
 293 0080 81E0      		ldi r24,lo8(1)
 294 0082 90E0      		ldi r25,0
 295 0084 0895      		ret
 297               	.Lscope3:
 299               	.global	initButton
 301               	initButton:
 114:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** /* === === === END SERVO SETUP === === === */
 115:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 116:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 117:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** void initButton(){
 303               	.LM19:
 304               	.LFBB4:
 305               	/* prologue: function */
 306               	/* frame size = 0 */
 307               	/* stack size = 0 */
 308               	.L__stack_usage = 0
 118:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    // uint8_t button = 3;
 119:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //uint8_t ledB = 2;
 120:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     DDRC ^= BV(button); //set as input
 310               	.LM20:
 311 0086 97B1      		in r25,0x7
 312 0088 28E0      		ldi r18,lo8(8)
 313 008a 9227      		eor r25,r18
 314 008c 97B9      		out 0x7,r25
 121:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     DDRC |= BV(ledB); //set output
 316               	.LM21:
 317 008e 3A9A      		sbi 0x7,2
 122:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 123:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     PORTC ^= BV(button); // set low
 319               	.LM22:
 320 0090 88B1      		in r24,0x8
 321 0092 8227      		eor r24,r18
 322 0094 88B9      		out 0x8,r24
 323 0096 0895      		ret
 325               	.Lscope4:
 326               		.section	.rodata.str1.1,"aMS",@progbits,1
 327               	.LC0:
 328 0000 6275 7474 		.string	"button press"
 328      6F6E 2070 
 328      7265 7373 
 328      00
 329               		.text
 331               	.global	buttonRead
 333               	buttonRead:
 124:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 125:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
 126:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 127:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int buttonRead(){
 335               	.LM23:
 336               	.LFBB5:
 337               	/* prologue: function */
 338               	/* frame size = 0 */
 339               	/* stack size = 0 */
 340               	.L__stack_usage = 0
 128:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     if(bit_is_clear(PINC, button)){
 342               	.LM24:
 343 0098 3399      		sbic 0x6,3
 344 009a 00C0      		rjmp .L7
 345               	.LBB116:
 346               	.LBB117:
 129:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDClear();
 348               	.LM25:
 349 009c 60E0      		ldi r22,0
 350 009e 81E0      		ldi r24,lo8(1)
 351 00a0 0E94 0000 		call LCDByte
 352               	.LBB118:
 353               	.LBB119:
 355               	.Ltext13:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 357               	.LM26:
 358 00a4 2FEF      		ldi r18,lo8(63999)
 359 00a6 89EF      		ldi r24,hi8(63999)
 360 00a8 90E0      		ldi r25,hlo8(63999)
 361 00aa 2150      	1:	subi r18,1
 362 00ac 8040      		sbci r24,0
 363 00ae 9040      		sbci r25,0
 364 00b0 01F4      		brne 1b
 365 00b2 00C0      		rjmp .
 366 00b4 0000      		nop
 367               	.LBE119:
 368               	.LBE118:
 370               	.Ltext14:
 130:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_ms(40);
 131:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteString("button press");
 372               	.LM27:
 373 00b6 80E0      		ldi r24,lo8(.LC0)
 374 00b8 90E0      		ldi r25,hi8(.LC0)
 375 00ba 0E94 0000 		call LCDWriteString
 132:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         open();
 377               	.LM28:
 378 00be 0E94 0000 		call open
 379               	.LBB120:
 380               	.LBB121:
 382               	.Ltext15:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 384               	.LM29:
 385 00c2 2FEF      		ldi r18,lo8(799999)
 386 00c4 84E3      		ldi r24,hi8(799999)
 387 00c6 9CE0      		ldi r25,hlo8(799999)
 388 00c8 2150      	1:	subi r18,1
 389 00ca 8040      		sbci r24,0
 390 00cc 9040      		sbci r25,0
 391 00ce 01F4      		brne 1b
 392 00d0 00C0      		rjmp .
 393 00d2 0000      		nop
 394               	.LBE121:
 395               	.LBE120:
 396               	.LBB122:
 397               	.LBB123:
 398 00d4 2FEF      		ldi r18,lo8(1599999)
 399 00d6 89E6      		ldi r24,hi8(1599999)
 400 00d8 98E1      		ldi r25,hlo8(1599999)
 401 00da 2150      	1:	subi r18,1
 402 00dc 8040      		sbci r24,0
 403 00de 9040      		sbci r25,0
 404 00e0 01F4      		brne 1b
 405 00e2 00C0      		rjmp .
 406 00e4 0000      		nop
 407               	.LBE123:
 408               	.LBE122:
 410               	.Ltext16:
 133:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_ms(500);
 134:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         close();
 135:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_ms(1000);
 136:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDClear();
 412               	.LM30:
 413 00e6 60E0      		ldi r22,0
 414 00e8 81E0      		ldi r24,lo8(1)
 415 00ea 0E94 0000 		call LCDByte
 416 00ee 81E0      		ldi r24,lo8(1)
 417 00f0 90E0      		ldi r25,0
 418 00f2 0895      		ret
 419               	.L7:
 420               	.LBE117:
 421               	.LBE116:
 137:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         return 1;
 138:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }
 139:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     return 0;
 423               	.LM31:
 424 00f4 80E0      		ldi r24,0
 425 00f6 90E0      		ldi r25,0
 140:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
 427               	.LM32:
 428 00f8 0895      		ret
 430               	.Lscope5:
 431               		.section	.rodata.str1.1
 432               	.LC1:
 433 000d 4543 454E 		.string	"ECEN1310 Door Opener"
 433      3133 3130 
 433      2044 6F6F 
 433      7220 4F70 
 433      656E 6572 
 434               	.LC2:
 435 0022 4572 726F 		.string	"Error"
 435      7200 
 436               	.LC3:
 437 0028 4361 7264 		.string	"Card Comparison"
 437      2043 6F6D 
 437      7061 7269 
 437      736F 6E00 
 438               	.LC4:
 439 0038 4D41 5443 		.string	"MATCH"
 439      4800 
 440               	.LC5:
 441 003e 5355 4343 		.string	"SUCCESS"
 441      4553 5300 
 442               	.LC6:
 443 0046 6E6F 7420 		.string	"not valid"
 443      7661 6C69 
 443      6400 
 444               	.LC7:
 445 0050 4348 4543 		.string	"CHECKED"
 445      4B45 4400 
 446               	.LC8:
 447 0058 7072 6573 		.string	"present card"
 447      656E 7420 
 447      6361 7264 
 447      00
 448               		.section	.text.startup,"ax",@progbits
 450               	.global	main
 452               	main:
 141:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 142:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 143:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int main(void)
 144:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** {
 454               	.LM33:
 455               	.LFBB6:
 456 0000 CF93      		push r28
 457 0002 DF93      		push r29
 458 0004 CDB7      		in r28,__SP_L__
 459 0006 DEB7      		in r29,__SP_H__
 460 0008 6097      		sbiw r28,16
 461 000a 0FB6      		in __tmp_reg__,__SREG__
 462 000c F894      		cli
 463 000e DEBF      		out __SP_H__,r29
 464 0010 0FBE      		out __SREG__,__tmp_reg__
 465 0012 CDBF      		out __SP_L__,r28
 466               	/* prologue: function */
 467               	/* frame size = 16 */
 468               	/* stack size = 18 */
 469               	.L__stack_usage = 18
 145:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 146:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     initServo(PORTC, DDRC, 5); //make servo an output at pin 5
 471               	.LM34:
 472 0014 67B1      		in r22,0x7
 473 0016 88B1      		in r24,0x8
 474 0018 70E0      		ldi r23,0
 475 001a 45E0      		ldi r20,lo8(5)
 476 001c 50E0      		ldi r21,0
 477 001e 90E0      		ldi r25,0
 478 0020 0E94 0000 		call initServo
 479               	.LBB124:
 480               	.LBB125:
 482               	.Ltext17:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 484               	.LM35:
 485 0024 2FE7      		ldi r18,lo8(79999)
 486 0026 88E3      		ldi r24,hi8(79999)
 487 0028 91E0      		ldi r25,hlo8(79999)
 488 002a 2150      	1:	subi r18,1
 489 002c 8040      		sbci r24,0
 490 002e 9040      		sbci r25,0
 491 0030 01F4      		brne 1b
 492 0032 00C0      		rjmp .
 493 0034 0000      		nop
 494               	.LBE125:
 495               	.LBE124:
 497               	.Ltext18:
 147:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 148:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     uint8_t byte;
 149:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     uint8_t str[MAX_LEN];
 150:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(50);
 151:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDInit(LS_BLINK);
 499               	.LM36:
 500 0036 81E0      		ldi r24,lo8(1)
 501 0038 0E94 0000 		call LCDInit
 152:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDWriteStringXY(2,0,"ECEN1310 Door Opener");
 503               	.LM37:
 504 003c 60E0      		ldi r22,0
 505 003e 82E0      		ldi r24,lo8(2)
 506 0040 0E94 0000 		call LCDGotoXY
 507 0044 80E0      		ldi r24,lo8(.LC1)
 508 0046 90E0      		ldi r25,hi8(.LC1)
 509 0048 0E94 0000 		call LCDWriteString
 153:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 154:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     spi_init(); //start communication for rfid
 511               	.LM38:
 512 004c 0E94 0000 		call spi_init
 513               	.LBB126:
 514               	.LBB127:
 516               	.Ltext19:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 518               	.LM39:
 519 0050 EFEF      		ldi r30,lo8(1599999)
 520 0052 F9E6      		ldi r31,hi8(1599999)
 521 0054 28E1      		ldi r18,hlo8(1599999)
 522 0056 E150      	1:	subi r30,1
 523 0058 F040      		sbci r31,0
 524 005a 2040      		sbci r18,0
 525 005c 01F4      		brne 1b
 526 005e 00C0      		rjmp .
 527 0060 0000      		nop
 528               	.LBE127:
 529               	.LBE126:
 531               	.Ltext20:
 155:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(1000);
 156:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDClear();
 533               	.LM40:
 534 0062 60E0      		ldi r22,0
 535 0064 81E0      		ldi r24,lo8(1)
 536 0066 0E94 0000 		call LCDByte
 157:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 158:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     open();
 538               	.LM41:
 539 006a 0E94 0000 		call open
 159:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     close();
 160:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 161:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //init reader
 162:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     mfrc522_init();
 541               	.LM42:
 542 006e 0E94 0000 		call mfrc522_init
 163:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 164:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     byte = mfrc522_read(ComIEnReg);
 544               	.LM43:
 545 0072 82E0      		ldi r24,lo8(2)
 546 0074 0E94 0000 		call mfrc522_read
 165:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     mfrc522_write(ComIEnReg,byte|0x20);
 548               	.LM44:
 549 0078 682F      		mov r22,r24
 550 007a 6062      		ori r22,lo8(32)
 551 007c 82E0      		ldi r24,lo8(2)
 552 007e 0E94 0000 		call mfrc522_write
 166:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     byte = mfrc522_read(DivIEnReg);
 554               	.LM45:
 555 0082 83E0      		ldi r24,lo8(3)
 556 0084 0E94 0000 		call mfrc522_read
 167:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     mfrc522_write(DivIEnReg,byte|0x80);
 558               	.LM46:
 559 0088 682F      		mov r22,r24
 560 008a 6068      		ori r22,lo8(-128)
 561 008c 83E0      		ldi r24,lo8(3)
 562 008e 0E94 0000 		call mfrc522_write
 563               	.LBB128:
 564               	.LBB129:
 566               	.Ltext21:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 568               	.LM47:
 569 0092 8FEF      		ldi r24,lo8(2399999)
 570 0094 9EE9      		ldi r25,hi8(2399999)
 571 0096 E4E2      		ldi r30,hlo8(2399999)
 572 0098 8150      	1:	subi r24,1
 573 009a 9040      		sbci r25,0
 574 009c E040      		sbci r30,0
 575 009e 01F4      		brne 1b
 576 00a0 00C0      		rjmp .
 577 00a2 0000      		nop
 578               	.LBE129:
 579               	.LBE128:
 581               	.Ltext22:
 168:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 169:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(1500);
 170:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDClear();
 583               	.LM48:
 584 00a4 60E0      		ldi r22,0
 585 00a6 81E0      		ldi r24,lo8(1)
 586 00a8 0E94 0000 		call LCDByte
 587 00ac 2E01      		movw r4,r28
 588 00ae F6E0      		ldi r31,6
 589 00b0 4F0E      		add r4,r31
 590 00b2 511C      		adc r5,__zero_reg__
 591               	.LBB130:
 171:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 172:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 173:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** while(1){
 174:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         byte = mfrc522_request(PICC_REQALL,str);
 175:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDHexDumpXY(0,0,byte);
 176:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         buttonRead();
 177:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 178:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         if(byte == CARD_FOUND)
 179:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         {
 180:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             byte = mfrc522_get_card_serial(str);
 181:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(byte == CARD_FOUND)
 182:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             {
 183:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);
 184:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 185:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 186:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 for(byte=0;byte<8;byte++)
 187:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     // LCDHexDumpXY(byte*2,0,str[byte]);
 188:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     //       LCDHexDumpXY(byte*2, 0, str[byte]);
 189:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteInt(str[byte], -1);
 190:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 191:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 192:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             else
 193:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             { //not a valid card found
 194:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteStringXY(0,1,"Error");
 195:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 196:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 197:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDWriteStringXY(0, 1, "Card Comparison");
 198:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(1000);
 199:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear(); //test
 200:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int i=0; i<5; i++){
 201:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);//test
 202:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //LCDWriteStringXY(0,0,"i:  ");
 203:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 // LCDWriteIntXY(5,0, i,1);//test
 204:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteInt(str[i], -1);//test
 205:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //   _delay_ms(1000);
 206:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 207:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(100);//test
 208:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();//test
 209:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 210:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int k=0;k<5 ;k++){
 211:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 // LCDHexDumpXY(byte*2,0,str[byte]);
 212:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //       LCDHexDumpXY(byte*2, 0, str[byte]);
 213:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteIntXY(0,1,str[k], -1);
 214:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 if(str[k] == card1[k]) //this is where you are testing
 215:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 {
 216:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteIntXY(0,1,str[k], -1);
 217:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteString("MATCH"); //jk i am testing
 218:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     _delay_ms(50);
 219:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDClear();
 220:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = 1;
 221:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 222:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 else{
 223:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = -1;
 224:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 225:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 226:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end of for loop checking if valid card
 227:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(validCard == 1){
 228:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 229:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(500);
 230:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteString("SUCCESS");
 231:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 open();
 232:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 validCard=5;
 593               	.LM49:
 594 00b4 95E0      		ldi r25,lo8(5)
 595 00b6 692E      		mov r6,r25
 596 00b8 712C      		mov r7,__zero_reg__
 597               	.LBB131:
 220:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 599               	.LM50:
 600 00ba AA24      		clr r10
 601 00bc A394      		inc r10
 602 00be B12C      		mov r11,__zero_reg__
 603 00c0 4E01      		movw r8,r28
 604 00c2 29E0      		ldi r18,9
 605 00c4 820E      		add r8,r18
 606 00c6 911C      		adc r9,__zero_reg__
 607               	.L19:
 608               	.LBE131:
 609               	.LBE130:
 174:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDHexDumpXY(0,0,byte);
 611               	.LM51:
 612 00c8 BE01      		movw r22,r28
 613 00ca 6F5F      		subi r22,-1
 614 00cc 7F4F      		sbci r23,-1
 615 00ce 82E5      		ldi r24,lo8(82)
 616 00d0 0E94 0000 		call mfrc522_request
 617 00d4 182F      		mov r17,r24
 175:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         buttonRead();
 619               	.LM52:
 620 00d6 482F      		mov r20,r24
 621 00d8 60E0      		ldi r22,0
 622 00da 80E0      		ldi r24,0
 623 00dc 0E94 0000 		call LCDHexDumpXY
 176:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 625               	.LM53:
 626 00e0 0E94 0000 		call buttonRead
 178:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         {
 628               	.LM54:
 629 00e4 1130      		cpi r17,lo8(1)
 630 00e6 01F0      		breq .+2
 631 00e8 00C0      		rjmp .L9
 632               	.LBB153:
 180:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(byte == CARD_FOUND)
 634               	.LM55:
 635 00ea CE01      		movw r24,r28
 636 00ec 0196      		adiw r24,1
 637 00ee 0E94 0000 		call mfrc522_get_card_serial
 181:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             {
 639               	.LM56:
 640 00f2 8130      		cpi r24,lo8(1)
 641 00f4 01F0      		breq .+2
 642 00f6 00C0      		rjmp .L10
 643               	.LBB134:
 644               	.LBB135:
 646               	.Ltext23:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 648               	.LM57:
 649 00f8 8FE5      		ldi r24,lo8(-5537)
 650 00fa 9AEE      		ldi r25,hi8(-5537)
 651 00fc 0197      	1:	sbiw r24,1
 652 00fe 01F4      		brne 1b
 653 0100 00C0      		rjmp .
 654 0102 0000      		nop
 655               	.LBE135:
 656               	.LBE134:
 658               	.Ltext24:
 184:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 660               	.LM58:
 661 0104 60E0      		ldi r22,0
 662 0106 81E0      		ldi r24,lo8(1)
 663 0108 0E94 0000 		call LCDByte
 664 010c 8E01      		movw r16,r28
 665 010e 0F5F      		subi r16,-1
 666 0110 1F4F      		sbci r17,-1
 667               	.L11:
 189:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 669               	.LM59:
 670 0112 F801      		movw r30,r16
 671 0114 8191      		ld r24,Z+
 672 0116 8F01      		movw r16,r30
 673 0118 6FEF      		ldi r22,lo8(-1)
 674 011a 7FEF      		ldi r23,lo8(-1)
 675 011c 90E0      		ldi r25,0
 676 011e 0E94 0000 		call LCDWriteInt
 186:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     // LCDHexDumpXY(byte*2,0,str[byte]);
 678               	.LM60:
 679 0122 0815      		cp r16,r8
 680 0124 1905      		cpc r17,r9
 681 0126 01F4      		brne .L11
 682               	.L12:
 197:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(1000);
 684               	.LM61:
 685 0128 61E0      		ldi r22,lo8(1)
 686 012a 80E0      		ldi r24,0
 687 012c 0E94 0000 		call LCDGotoXY
 688 0130 80E0      		ldi r24,lo8(.LC3)
 689 0132 90E0      		ldi r25,hi8(.LC3)
 690 0134 0E94 0000 		call LCDWriteString
 691               	.LBB136:
 692               	.LBB137:
 694               	.Ltext25:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 696               	.LM62:
 697 0138 FFEF      		ldi r31,lo8(1599999)
 698 013a 29E6      		ldi r18,hi8(1599999)
 699 013c 88E1      		ldi r24,hlo8(1599999)
 700 013e F150      	1:	subi r31,1
 701 0140 2040      		sbci r18,0
 702 0142 8040      		sbci r24,0
 703 0144 01F4      		brne 1b
 704 0146 00C0      		rjmp .
 705 0148 0000      		nop
 706               	.LBE137:
 707               	.LBE136:
 709               	.Ltext26:
 199:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int i=0; i<5; i++){
 711               	.LM63:
 712 014a 60E0      		ldi r22,0
 713 014c 81E0      		ldi r24,lo8(1)
 714 014e 0E94 0000 		call LCDByte
 715 0152 8E01      		movw r16,r28
 716 0154 0F5F      		subi r16,-1
 717 0156 1F4F      		sbci r17,-1
 718 0158 7801      		movw r14,r16
 719               	.L13:
 720               	.LBB138:
 721               	.LBB139:
 722               	.LBB140:
 724               	.Ltext27:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 726               	.LM64:
 727 015a 8FE5      		ldi r24,lo8(-5537)
 728 015c 9AEE      		ldi r25,hi8(-5537)
 729 015e 0197      	1:	sbiw r24,1
 730 0160 01F4      		brne 1b
 731 0162 00C0      		rjmp .
 732 0164 0000      		nop
 733               	.LBE140:
 734               	.LBE139:
 736               	.Ltext28:
 204:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //   _delay_ms(1000);
 738               	.LM65:
 739 0166 F701      		movw r30,r14
 740 0168 8191      		ld r24,Z+
 741 016a 7F01      		movw r14,r30
 742 016c 6FEF      		ldi r22,lo8(-1)
 743 016e 7FEF      		ldi r23,lo8(-1)
 744 0170 90E0      		ldi r25,0
 745 0172 0E94 0000 		call LCDWriteInt
 200:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);//test
 747               	.LM66:
 748 0176 E414      		cp r14,r4
 749 0178 F504      		cpc r15,r5
 750 017a 01F4      		brne .L13
 751               	.LBE138:
 752               	.LBB141:
 753               	.LBB142:
 755               	.Ltext29:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 757               	.LM67:
 758 017c FFEF      		ldi r31,lo8(159999)
 759 017e 20E7      		ldi r18,hi8(159999)
 760 0180 82E0      		ldi r24,hlo8(159999)
 761 0182 F150      	1:	subi r31,1
 762 0184 2040      		sbci r18,0
 763 0186 8040      		sbci r24,0
 764 0188 01F4      		brne 1b
 765 018a 00C0      		rjmp .
 766 018c 0000      		nop
 767               	.LBE142:
 768               	.LBE141:
 770               	.Ltext30:
 208:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 772               	.LM68:
 773 018e 60E0      		ldi r22,0
 774 0190 81E0      		ldi r24,lo8(1)
 775 0192 0E94 0000 		call LCDByte
 776 0196 80E0      		ldi r24,lo8(card1)
 777 0198 C82E      		mov r12,r24
 778 019a 80E0      		ldi r24,hi8(card1)
 779 019c D82E      		mov r13,r24
 780               	.L16:
 781               	.LBB143:
 213:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 if(str[k] == card1[k]) //this is where you are testing
 783               	.LM69:
 784 019e 61E0      		ldi r22,lo8(1)
 785 01a0 80E0      		ldi r24,0
 786 01a2 0E94 0000 		call LCDGotoXY
 787 01a6 F801      		movw r30,r16
 788 01a8 8081      		ld r24,Z
 789 01aa 6FEF      		ldi r22,lo8(-1)
 790 01ac 7FEF      		ldi r23,lo8(-1)
 791 01ae 90E0      		ldi r25,0
 792 01b0 0E94 0000 		call LCDWriteInt
 214:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 {
 794               	.LM70:
 795 01b4 F601      		movw r30,r12
 796 01b6 8191      		ld r24,Z+
 797 01b8 6F01      		movw r12,r30
 798 01ba F801      		movw r30,r16
 799 01bc 9081      		ld r25,Z
 800 01be 9813      		cpse r25,r24
 801 01c0 00C0      		rjmp .L14
 216:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteString("MATCH"); //jk i am testing
 803               	.LM71:
 804 01c2 61E0      		ldi r22,lo8(1)
 805 01c4 80E0      		ldi r24,0
 806 01c6 0E94 0000 		call LCDGotoXY
 807 01ca F801      		movw r30,r16
 808 01cc 8081      		ld r24,Z
 809 01ce 6FEF      		ldi r22,lo8(-1)
 810 01d0 7FEF      		ldi r23,lo8(-1)
 811 01d2 90E0      		ldi r25,0
 812 01d4 0E94 0000 		call LCDWriteInt
 217:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     _delay_ms(50);
 814               	.LM72:
 815 01d8 80E0      		ldi r24,lo8(.LC4)
 816 01da 90E0      		ldi r25,hi8(.LC4)
 817 01dc 0E94 0000 		call LCDWriteString
 818               	.LBB132:
 819               	.LBB133:
 821               	.Ltext31:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 823               	.LM73:
 824 01e0 FFE7      		ldi r31,lo8(79999)
 825 01e2 28E3      		ldi r18,hi8(79999)
 826 01e4 81E0      		ldi r24,hlo8(79999)
 827 01e6 F150      	1:	subi r31,1
 828 01e8 2040      		sbci r18,0
 829 01ea 8040      		sbci r24,0
 830 01ec 01F4      		brne 1b
 831 01ee 00C0      		rjmp .
 832 01f0 0000      		nop
 833               	.LBE133:
 834               	.LBE132:
 836               	.Ltext32:
 219:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = 1;
 838               	.LM74:
 839 01f2 60E0      		ldi r22,0
 840 01f4 81E0      		ldi r24,lo8(1)
 841 01f6 0E94 0000 		call LCDByte
 220:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 843               	.LM75:
 844 01fa B092 0000 		sts validCard+1,r11
 845 01fe A092 0000 		sts validCard,r10
 846               	.L15:
 847 0202 0F5F      		subi r16,-1
 848 0204 1F4F      		sbci r17,-1
 210:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 // LCDHexDumpXY(byte*2,0,str[byte]);
 850               	.LM76:
 851 0206 0E15      		cp r16,r14
 852 0208 1F05      		cpc r17,r15
 853 020a 01F4      		brne .L16
 854               	.LBE143:
 227:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 856               	.LM77:
 857 020c 8091 0000 		lds r24,validCard
 858 0210 9091 0000 		lds r25,validCard+1
 859 0214 0197      		sbiw r24,1
 860 0216 01F4      		brne .L17
 228:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(500);
 862               	.LM78:
 863 0218 60E0      		ldi r22,0
 864 021a 81E0      		ldi r24,lo8(1)
 865 021c 0E94 0000 		call LCDByte
 866               	.LBB144:
 867               	.LBB145:
 869               	.Ltext33:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 871               	.LM79:
 872 0220 9FEF      		ldi r25,lo8(799999)
 873 0222 E4E3      		ldi r30,hi8(799999)
 874 0224 FCE0      		ldi r31,hlo8(799999)
 875 0226 9150      	1:	subi r25,1
 876 0228 E040      		sbci r30,0
 877 022a F040      		sbci r31,0
 878 022c 01F4      		brne 1b
 879 022e 00C0      		rjmp .
 880 0230 0000      		nop
 881               	.LBE145:
 882               	.LBE144:
 884               	.Ltext34:
 230:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 open();
 886               	.LM80:
 887 0232 80E0      		ldi r24,lo8(.LC5)
 888 0234 90E0      		ldi r25,hi8(.LC5)
 889 0236 0E94 0000 		call LCDWriteString
 231:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 validCard=5;
 891               	.LM81:
 892 023a 0E94 0000 		call open
 894               	.LM82:
 895 023e 7092 0000 		sts validCard+1,r7
 896 0242 6092 0000 		sts validCard,r6
 897               	.L17:
 233:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end if test worked
 234:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(validCard == -1){
 899               	.LM83:
 900 0246 8091 0000 		lds r24,validCard
 901 024a 9091 0000 		lds r25,validCard+1
 902 024e 0196      		adiw r24,1
 903 0250 01F4      		brne .L18
 235:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 905               	.LM84:
 906 0252 60E0      		ldi r22,0
 907 0254 81E0      		ldi r24,lo8(1)
 908 0256 0E94 0000 		call LCDByte
 909               	.LBB146:
 910               	.LBB147:
 912               	.Ltext35:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 914               	.LM85:
 915 025a 8FEF      		ldi r24,lo8(159999)
 916 025c 90E7      		ldi r25,hi8(159999)
 917 025e E2E0      		ldi r30,hlo8(159999)
 918 0260 8150      	1:	subi r24,1
 919 0262 9040      		sbci r25,0
 920 0264 E040      		sbci r30,0
 921 0266 01F4      		brne 1b
 922 0268 00C0      		rjmp .
 923 026a 0000      		nop
 924               	.LBE147:
 925               	.LBE146:
 927               	.Ltext36:
 236:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(100);
 237:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteString("not valid");
 929               	.LM86:
 930 026c 80E0      		ldi r24,lo8(.LC6)
 931 026e 90E0      		ldi r25,hi8(.LC6)
 932 0270 0E94 0000 		call LCDWriteString
 933               	.L18:
 934               	.LBB148:
 935               	.LBB149:
 937               	.Ltext37:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 939               	.LM87:
 940 0274 FFE7      		ldi r31,lo8(1199999)
 941 0276 2FE4      		ldi r18,hi8(1199999)
 942 0278 82E1      		ldi r24,hlo8(1199999)
 943 027a F150      	1:	subi r31,1
 944 027c 2040      		sbci r18,0
 945 027e 8040      		sbci r24,0
 946 0280 01F4      		brne 1b
 947 0282 00C0      		rjmp .
 948 0284 0000      		nop
 949               	.LBE149:
 950               	.LBE148:
 952               	.Ltext38:
 238:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 close();
 239:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end of loop for checking valid card
 240:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 241:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(750);
 242:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();
 954               	.LM88:
 955 0286 60E0      		ldi r22,0
 956 0288 81E0      		ldi r24,lo8(1)
 957 028a 0E94 0000 		call LCDByte
 243:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDWriteString("CHECKED");
 959               	.LM89:
 960 028e 80E0      		ldi r24,lo8(.LC7)
 961 0290 90E0      		ldi r25,hi8(.LC7)
 962 0292 0E94 0000 		call LCDWriteString
 963               	.LBB150:
 964               	.LBB151:
 966               	.Ltext39:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 968               	.LM90:
 969 0296 9FE7      		ldi r25,lo8(399999)
 970 0298 EAE1      		ldi r30,hi8(399999)
 971 029a F6E0      		ldi r31,hlo8(399999)
 972 029c 9150      	1:	subi r25,1
 973 029e E040      		sbci r30,0
 974 02a0 F040      		sbci r31,0
 975 02a2 01F4      		brne 1b
 976 02a4 00C0      		rjmp .
 977 02a6 0000      		nop
 978               	.LBE151:
 979               	.LBE150:
 981               	.Ltext40:
 244:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(250);
 245:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();
 983               	.LM91:
 984 02a8 60E0      		ldi r22,0
 985 02aa 81E0      		ldi r24,lo8(1)
 986 02ac 0E94 0000 		call LCDByte
 987               	.L9:
 988               	.LBE153:
 246:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         } //end of valid card found
 247:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 248:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteString("present card");
 990               	.LM92:
 991 02b0 80E0      		ldi r24,lo8(.LC8)
 992 02b2 90E0      		ldi r25,hi8(.LC8)
 993 02b4 0E94 0000 		call LCDWriteString
 174:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDHexDumpXY(0,0,byte);
 995               	.LM93:
 996 02b8 00C0      		rjmp .L19
 997               	.L10:
 998               	.LBB154:
 194:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 1000               	.LM94:
 1001 02ba 61E0      		ldi r22,lo8(1)
 1002 02bc 80E0      		ldi r24,0
 1003 02be 0E94 0000 		call LCDGotoXY
 1004 02c2 80E0      		ldi r24,lo8(.LC2)
 1005 02c4 90E0      		ldi r25,hi8(.LC2)
 1006 02c6 0E94 0000 		call LCDWriteString
 1007 02ca 00C0      		rjmp .L12
 1008               	.L14:
 1009               	.LBB152:
 223:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 1011               	.LM95:
 1012 02cc 8FEF      		ldi r24,lo8(-1)
 1013 02ce 9FEF      		ldi r25,lo8(-1)
 1014 02d0 9093 0000 		sts validCard+1,r25
 1015 02d4 8093 0000 		sts validCard,r24
 1016 02d8 00C0      		rjmp .L15
 1017               	.LBE152:
 1018               	.LBE154:
 1023               	.Lscope6:
 1024               	.global	validCard
 1025               		.data
 1028               	validCard:
 1029 0000 FEFF      		.word	-2
 1031               	.global	card1
 1034               	card1:
 1035 0002 AE        		.byte	-82
 1036 0003 44        		.byte	68
 1037 0004 2D        		.byte	45
 1038 0005 5B        		.byte	91
 1039 0006 9C        		.byte	-100
 1040 0007 0000 0000 		.zero	11
 1040      0000 0000 
 1040      0000 00
 1042               		.comm	SelfTestBuffer,64,1
 1044               		.text
 1046               	.Letext0:
 1047               		.ident	"GCC: (GNU) 6.2.0"
 1048               	.global __do_copy_data
 1049               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:4      *ABS*:000000000000003f __SREG__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:111    .text:0000000000000000 initServo
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:167    .text:0000000000000026 open
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:283    .text:0000000000000080 close
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:301    .text:0000000000000086 initButton
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:333    .text:0000000000000098 buttonRead
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:452    .text.startup:0000000000000000 main
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:1034   .data:0000000000000002 card1
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//cc6MSeiC.s:1028   .data:0000000000000000 validCard
                            *COM*:0000000000000040 SelfTestBuffer

UNDEFINED SYMBOLS
LCDByte
LCDWriteString
LCDInit
LCDGotoXY
spi_init
mfrc522_init
mfrc522_read
mfrc522_write
mfrc522_request
LCDHexDumpXY
mfrc522_get_card_serial
LCDWriteInt
__do_copy_data
__do_clear_bss
