   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 109               	.global	initServo
 111               	initServo:
   1:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** /*
   2:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  correctly reading tags now.
   3:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  on 3/17 this was working.
   4:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
   5:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  I am modifying it now to see if i can get a servo to turn with a card read.
   6:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
   7:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  * main.c
   8:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  *
   9:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  * Copyright 2013 Shimon <shimon@monistit.com>
  10:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  11:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  base code from Shimon to get the spi and rfid working. I added the servo support and implimented s
  12:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  13:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  the AVR requires a .1uF capacitor on power and ground. Without it the avr would randomly restart. 
  14:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  
  15:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  
  16:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  button polling works to turn on servo
  17:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  
  18:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  Not sure how I got card1 id. I dont know if it was uart or if it was with creative print lines 
  19:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     I used creative print lines
  20:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  21:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  x*/
  22:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  23:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <avr/io.h>
  24:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <util/delay.h>
  25:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <lcd.h>
  26:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <utils.h>
  27:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <spi.h>
  28:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <mfrc522.h>
  29:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <string.h>
  30:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  31:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define BV(x) (1<<x)     // shifts bits by x. and sets the bit to 1 or 0 based on x 0 is zero shift
  32:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define ToggleBit(port, bit) (port ^= (1 << bit) //  toggles the bit by negating
  33:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  34:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define button 3 //that is the pin on portc that is input for button
  35:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define ledB 2 //led for indicator for button
  36:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  37:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** uint8_t SelfTestBuffer[64];
  38:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  39:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     /* === === ===    SERVO SETUP   === === === */
  40:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     /*
  41:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      pin PB1 using 16 bit timer
  42:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      Read servo example that I have in xcode.
  43:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  44:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      to move the servo to max:
  45:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  46:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  47:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      OCR1A = ICR1 - 2000; //18000
  48:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      _delay_ms(500);
  49:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  50:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      to move servo to min
  51:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      OCR1A = ICR1 - 1000; //1000 milisecond
  52:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      _delay_ms(500);
  53:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  54:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  55:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      cannot use timer 1 because its used for spi. so we have to use timer 2 or do all software
  56:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  57:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  58:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      */
  59:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  60:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //void buttonInit(volatile uint8_t *port, int pin){
  61:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    
  62:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //}
  63:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  64:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //void buttonRead(){
  65:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    //button is hardware debounced.
  66:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    
  67:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //}
  68:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  69:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //RFID constants
  70:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //holds id cards
  71:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** uint8_t card1[5] = {174,68,45,91,156}; //only 5 elements!!!
  72:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** uint8_t card2[5] = {64, 238 , 223, 135, 246};
  73:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  74:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  75:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int validCard = -2;
  76:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  77:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  78:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** void initServo(){
 113               	.LM0:
 114               	.LFBB1:
 115               	/* prologue: function */
 116               	/* frame size = 0 */
 117               	/* stack size = 0 */
 118               	.L__stack_usage = 0
  79:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            //make A5 output.
  80:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            *ddr=BV(pin);      // PORTC declared as output 0xFF is all output 11111 so i have 8 b
  81:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            *port=BV(pin);     // PORTC is initially LOW OFF the led initially /
  82:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //to do make the register parameter work
  83:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  84:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     DDRC = BV(5);
 120               	.LM1:
 121 0000 90E2      		ldi r25,lo8(32)
 122 0002 97B9      		out 0x7,r25
  85:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         //set to closed position
  86:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         PORTC = (BV(5));
 124               	.LM2:
 125 0004 98B9      		out 0x8,r25
 126               	.LBB98:
 127               	.LBB99:
 129               	.Ltext1:
   1:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** _delay_us(double __us)
 256:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	double __tmp ;
 258:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 262:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 263:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 264:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 274:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 131               	.LM3:
 132 0006 EFEC      		ldi r30,lo8(1999)
 133 0008 F7E0      		ldi r31,hi8(1999)
 134 000a 3197      	1:	sbiw r30,1
 135 000c 01F4      		brne 1b
 136 000e 00C0      		rjmp .
 137 0010 0000      		nop
 138               	.LBE99:
 139               	.LBE98:
 141               	.Ltext2:
  87:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_us(1000);
  88:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         PORTC   ^=BV(5);
 143               	.LM4:
 144 0012 88B1      		in r24,0x8
 145 0014 8927      		eor r24,r25
 146 0016 88B9      		out 0x8,r24
 147               	.LBB100:
 148               	.LBB101:
 150               	.Ltext3:
 152               	.LM5:
 153 0018 8FE6      		ldi r24,lo8(-27537)
 154 001a 94E9      		ldi r25,hi8(-27537)
 155 001c 0197      	1:	sbiw r24,1
 156 001e 01F4      		brne 1b
 157 0020 00C0      		rjmp .
 158 0022 0000      		nop
 159 0024 0895      		ret
 160               	.LBE101:
 161               	.LBE100:
 163               	.Lscope1:
 165               	.global	open
 167               	open:
 169               	.Ltext4:
  89:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_us(19000); //remember that total period is 2ms or 2k micros and you need to do it th
  90:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
  91:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  92:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int open(){
 171               	.LM6:
 172               	.LFBB2:
 173               	/* prologue: function */
 174               	/* frame size = 0 */
 175               	/* stack size = 0 */
 176               	.L__stack_usage = 0
  93:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        *port = (uint8_t)(BV(pin)); //need to change this code to work
  94:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(2000);
  95:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port   ^=BV(pin);
  96:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(18000);
  97:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //
  98:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_ms(4000);
  99:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //
 100:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port = (BV(pin));
 101:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(1000);
 102:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port   ^=BV(pin);
 103:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(19000);
 104:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 105:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     PORTC = (BV(5));
 178               	.LM7:
 179 0026 80E2      		ldi r24,lo8(32)
 180 0028 88B9      		out 0x8,r24
 181               	.LBB102:
 182               	.LBB103:
 184               	.Ltext5:
 186               	.LM8:
 187 002a EFE9      		ldi r30,lo8(3999)
 188 002c FFE0      		ldi r31,hi8(3999)
 189 002e 3197      	1:	sbiw r30,1
 190 0030 01F4      		brne 1b
 191 0032 00C0      		rjmp .
 192 0034 0000      		nop
 193               	.LBE103:
 194               	.LBE102:
 196               	.Ltext6:
 106:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(2000);
 107:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC  ^=BV(5);
 198               	.LM9:
 199 0036 98B1      		in r25,0x8
 200 0038 9827      		eor r25,r24
 201 003a 98B9      		out 0x8,r25
 202               	.LBB104:
 203               	.LBB105:
 205               	.Ltext7:
 207               	.LM10:
 208 003c EFE9      		ldi r30,lo8(-29537)
 209 003e FCE8      		ldi r31,hi8(-29537)
 210 0040 3197      	1:	sbiw r30,1
 211 0042 01F4      		brne 1b
 212 0044 00C0      		rjmp .
 213 0046 0000      		nop
 214               	.LBE105:
 215               	.LBE104:
 216               	.LBB106:
 217               	.LBB107:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 219               	.LM11:
 220 0048 FFEF      		ldi r31,lo8(6399999)
 221 004a 27EA      		ldi r18,hi8(6399999)
 222 004c 31E6      		ldi r19,hlo8(6399999)
 223 004e F150      	1:	subi r31,1
 224 0050 2040      		sbci r18,0
 225 0052 3040      		sbci r19,0
 226 0054 01F4      		brne 1b
 227 0056 00C0      		rjmp .
 228 0058 0000      		nop
 229               	.LBE107:
 230               	.LBE106:
 232               	.Ltext8:
 108:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(18000);
 109:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 110:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(4000);
 111:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 112:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC = (BV(5));
 234               	.LM12:
 235 005a 88B9      		out 0x8,r24
 236               	.LBB108:
 237               	.LBB109:
 239               	.Ltext9:
 241               	.LM13:
 242 005c EFEC      		ldi r30,lo8(1999)
 243 005e F7E0      		ldi r31,hi8(1999)
 244 0060 3197      	1:	sbiw r30,1
 245 0062 01F4      		brne 1b
 246 0064 00C0      		rjmp .
 247 0066 0000      		nop
 248               	.LBE109:
 249               	.LBE108:
 251               	.Ltext10:
 113:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(1000);
 114:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC   ^=BV(5);
 253               	.LM14:
 254 0068 98B1      		in r25,0x8
 255 006a 8927      		eor r24,r25
 256 006c 88B9      		out 0x8,r24
 257               	.LBB110:
 258               	.LBB111:
 260               	.Ltext11:
 262               	.LM15:
 263 006e 8FE6      		ldi r24,lo8(-27537)
 264 0070 94E9      		ldi r25,hi8(-27537)
 265 0072 0197      	1:	sbiw r24,1
 266 0074 01F4      		brne 1b
 267 0076 00C0      		rjmp .
 268 0078 0000      		nop
 269               	.LBE111:
 270               	.LBE110:
 272               	.Ltext12:
 115:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(19000);
 116:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** return 1;
 117:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }
 274               	.LM16:
 275 007a 81E0      		ldi r24,lo8(1)
 276 007c 90E0      		ldi r25,0
 277 007e 0895      		ret
 279               	.Lscope2:
 281               	.global	close
 283               	close:
 118:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 119:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int close(void){
 285               	.LM17:
 286               	.LFBB3:
 287               	/* prologue: function */
 288               	/* frame size = 0 */
 289               	/* stack size = 0 */
 290               	.L__stack_usage = 0
 120:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //ToDo: need to update this
 121:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         return 1;
 122:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
 292               	.LM18:
 293 0080 81E0      		ldi r24,lo8(1)
 294 0082 90E0      		ldi r25,0
 295 0084 0895      		ret
 297               	.Lscope3:
 299               	.global	initButton
 301               	initButton:
 123:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** /* === === === END SERVO SETUP === === === */
 124:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 125:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 126:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** void initButton(){
 303               	.LM19:
 304               	.LFBB4:
 305               	/* prologue: function */
 306               	/* frame size = 0 */
 307               	/* stack size = 0 */
 308               	.L__stack_usage = 0
 127:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    // uint8_t button = 3;
 128:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //uint8_t ledB = 2;
 129:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     DDRC ^= BV(button); //set as input
 310               	.LM20:
 311 0086 97B1      		in r25,0x7
 312 0088 28E0      		ldi r18,lo8(8)
 313 008a 9227      		eor r25,r18
 314 008c 97B9      		out 0x7,r25
 130:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     DDRC |= BV(ledB); //set output
 316               	.LM21:
 317 008e 3A9A      		sbi 0x7,2
 131:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 132:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     PORTC ^= BV(button); // set low
 319               	.LM22:
 320 0090 88B1      		in r24,0x8
 321 0092 8227      		eor r24,r18
 322 0094 88B9      		out 0x8,r24
 323 0096 0895      		ret
 325               	.Lscope4:
 326               		.section	.rodata.str1.1,"aMS",@progbits,1
 327               	.LC0:
 328 0000 6275 7474 		.string	"button press"
 328      6F6E 2070 
 328      7265 7373 
 328      00
 329               		.text
 331               	.global	buttonRead
 333               	buttonRead:
 133:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 134:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
 135:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 136:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int buttonRead(){
 335               	.LM23:
 336               	.LFBB5:
 337               	/* prologue: function */
 338               	/* frame size = 0 */
 339               	/* stack size = 0 */
 340               	.L__stack_usage = 0
 137:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     if(bit_is_clear(PINC, button)){
 342               	.LM24:
 343 0098 3399      		sbic 0x6,3
 344 009a 00C0      		rjmp .L7
 345               	.LBB120:
 346               	.LBB121:
 138:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDClear();
 348               	.LM25:
 349 009c 60E0      		ldi r22,0
 350 009e 81E0      		ldi r24,lo8(1)
 351 00a0 0E94 0000 		call LCDByte
 352               	.LBB122:
 353               	.LBB123:
 355               	.Ltext13:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 357               	.LM26:
 358 00a4 2FEF      		ldi r18,lo8(63999)
 359 00a6 89EF      		ldi r24,hi8(63999)
 360 00a8 90E0      		ldi r25,hlo8(63999)
 361 00aa 2150      	1:	subi r18,1
 362 00ac 8040      		sbci r24,0
 363 00ae 9040      		sbci r25,0
 364 00b0 01F4      		brne 1b
 365 00b2 00C0      		rjmp .
 366 00b4 0000      		nop
 367               	.LBE123:
 368               	.LBE122:
 370               	.Ltext14:
 139:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_ms(40);
 140:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteString("button press");
 372               	.LM27:
 373 00b6 80E0      		ldi r24,lo8(.LC0)
 374 00b8 90E0      		ldi r25,hi8(.LC0)
 375 00ba 0E94 0000 		call LCDWriteString
 141:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         open();
 377               	.LM28:
 378 00be 0E94 0000 		call open
 379               	.LBB124:
 380               	.LBB125:
 382               	.Ltext15:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 384               	.LM29:
 385 00c2 2FEF      		ldi r18,lo8(799999)
 386 00c4 84E3      		ldi r24,hi8(799999)
 387 00c6 9CE0      		ldi r25,hlo8(799999)
 388 00c8 2150      	1:	subi r18,1
 389 00ca 8040      		sbci r24,0
 390 00cc 9040      		sbci r25,0
 391 00ce 01F4      		brne 1b
 392 00d0 00C0      		rjmp .
 393 00d2 0000      		nop
 394               	.LBE125:
 395               	.LBE124:
 396               	.LBB126:
 397               	.LBB127:
 398 00d4 2FEF      		ldi r18,lo8(1599999)
 399 00d6 89E6      		ldi r24,hi8(1599999)
 400 00d8 98E1      		ldi r25,hlo8(1599999)
 401 00da 2150      	1:	subi r18,1
 402 00dc 8040      		sbci r24,0
 403 00de 9040      		sbci r25,0
 404 00e0 01F4      		brne 1b
 405 00e2 00C0      		rjmp .
 406 00e4 0000      		nop
 407               	.LBE127:
 408               	.LBE126:
 410               	.Ltext16:
 142:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_ms(500);
 143:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         close();
 144:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_ms(1000);
 145:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDClear();
 412               	.LM30:
 413 00e6 60E0      		ldi r22,0
 414 00e8 81E0      		ldi r24,lo8(1)
 415 00ea 0E94 0000 		call LCDByte
 416 00ee 81E0      		ldi r24,lo8(1)
 417 00f0 90E0      		ldi r25,0
 418 00f2 0895      		ret
 419               	.L7:
 420               	.LBE121:
 421               	.LBE120:
 146:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         return 1;
 147:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }
 148:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     return 0;
 423               	.LM31:
 424 00f4 80E0      		ldi r24,0
 425 00f6 90E0      		ldi r25,0
 149:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
 427               	.LM32:
 428 00f8 0895      		ret
 430               	.Lscope5:
 431               		.section	.rodata.str1.1
 432               	.LC1:
 433 000d 4543 454E 		.string	"ECEN1310 RFID Tag Reader"
 433      3133 3130 
 433      2052 4649 
 433      4420 5461 
 433      6720 5265 
 434               	.LC2:
 435 0026 4572 726F 		.string	"Error"
 435      7200 
 436               	.LC3:
 437 002c 4361 7264 		.string	"Card Comparison"
 437      2043 6F6D 
 437      7061 7269 
 437      736F 6E00 
 438               	.LC4:
 439 003c 4D41 5443 		.string	"MATCH"
 439      4800 
 440               	.LC5:
 441 0042 5355 4343 		.string	"SUCCESS"
 441      4553 5300 
 442               	.LC6:
 443 004a 6E6F 7420 		.string	"not valid"
 443      7661 6C69 
 443      6400 
 444               	.LC7:
 445 0054 4348 4543 		.string	"CHECKED"
 445      4B45 4400 
 446               	.LC8:
 447 005c 5072 6573 		.string	"Present Tag"
 447      656E 7420 
 447      5461 6700 
 448               		.section	.text.startup,"ax",@progbits
 450               	.global	main
 452               	main:
 150:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 151:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 152:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int main(void)
 153:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** {
 454               	.LM33:
 455               	.LFBB6:
 456 0000 CF93      		push r28
 457 0002 DF93      		push r29
 458 0004 CDB7      		in r28,__SP_L__
 459 0006 DEB7      		in r29,__SP_H__
 460 0008 6097      		sbiw r28,16
 461 000a 0FB6      		in __tmp_reg__,__SREG__
 462 000c F894      		cli
 463 000e DEBF      		out __SP_H__,r29
 464 0010 0FBE      		out __SREG__,__tmp_reg__
 465 0012 CDBF      		out __SP_L__,r28
 466               	/* prologue: function */
 467               	/* frame size = 16 */
 468               	/* stack size = 18 */
 469               	.L__stack_usage = 18
 154:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 155:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     initServo(PORTC, DDRC, 5); //make servo an output at pin 5
 471               	.LM34:
 472 0014 67B1      		in r22,0x7
 473 0016 88B1      		in r24,0x8
 474 0018 70E0      		ldi r23,0
 475 001a 45E0      		ldi r20,lo8(5)
 476 001c 50E0      		ldi r21,0
 477 001e 90E0      		ldi r25,0
 478 0020 0E94 0000 		call initServo
 479               	.LBB128:
 480               	.LBB129:
 482               	.Ltext17:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 484               	.LM35:
 485 0024 2FE7      		ldi r18,lo8(79999)
 486 0026 88E3      		ldi r24,hi8(79999)
 487 0028 91E0      		ldi r25,hlo8(79999)
 488 002a 2150      	1:	subi r18,1
 489 002c 8040      		sbci r24,0
 490 002e 9040      		sbci r25,0
 491 0030 01F4      		brne 1b
 492 0032 00C0      		rjmp .
 493 0034 0000      		nop
 494               	.LBE129:
 495               	.LBE128:
 497               	.Ltext18:
 156:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 157:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     uint8_t byte;
 158:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     uint8_t str[MAX_LEN];
 159:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(50);
 160:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDInit(LS_BLINK);
 499               	.LM36:
 500 0036 81E0      		ldi r24,lo8(1)
 501 0038 0E94 0000 		call LCDInit
 161:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDWriteStringXY(2,0,"ECEN1310 RFID Tag Reader");
 503               	.LM37:
 504 003c 60E0      		ldi r22,0
 505 003e 82E0      		ldi r24,lo8(2)
 506 0040 0E94 0000 		call LCDGotoXY
 507 0044 80E0      		ldi r24,lo8(.LC1)
 508 0046 90E0      		ldi r25,hi8(.LC1)
 509 0048 0E94 0000 		call LCDWriteString
 162:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 163:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     spi_init(); //start communication for rfid
 511               	.LM38:
 512 004c 0E94 0000 		call spi_init
 513               	.LBB130:
 514               	.LBB131:
 516               	.Ltext19:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 518               	.LM39:
 519 0050 EFEF      		ldi r30,lo8(1599999)
 520 0052 F9E6      		ldi r31,hi8(1599999)
 521 0054 28E1      		ldi r18,hlo8(1599999)
 522 0056 E150      	1:	subi r30,1
 523 0058 F040      		sbci r31,0
 524 005a 2040      		sbci r18,0
 525 005c 01F4      		brne 1b
 526 005e 00C0      		rjmp .
 527 0060 0000      		nop
 528               	.LBE131:
 529               	.LBE130:
 531               	.Ltext20:
 164:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(1000);
 165:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDClear();
 533               	.LM40:
 534 0062 60E0      		ldi r22,0
 535 0064 81E0      		ldi r24,lo8(1)
 536 0066 0E94 0000 		call LCDByte
 166:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 167:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     open();
 538               	.LM41:
 539 006a 0E94 0000 		call open
 168:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     close();
 169:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 170:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //init reader
 171:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     mfrc522_init();
 541               	.LM42:
 542 006e 0E94 0000 		call mfrc522_init
 543               	.LBB132:
 544               	.LBB133:
 546               	.Ltext21:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 548               	.LM43:
 549 0072 8FEF      		ldi r24,lo8(2399999)
 550 0074 9EE9      		ldi r25,hi8(2399999)
 551 0076 E4E2      		ldi r30,hlo8(2399999)
 552 0078 8150      	1:	subi r24,1
 553 007a 9040      		sbci r25,0
 554 007c E040      		sbci r30,0
 555 007e 01F4      		brne 1b
 556 0080 00C0      		rjmp .
 557 0082 0000      		nop
 558               	.LBE133:
 559               	.LBE132:
 561               	.Ltext22:
 172:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 173:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    byte = mfrc522_read(ComIEnReg);
 174:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    mfrc522_write(ComIEnReg,byte|0x20);
 175:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    byte = mfrc522_read(DivIEnReg);
 176:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    mfrc522_write(DivIEnReg,byte|0x80);
 177:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 178:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(1500);
 179:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDClear();
 563               	.LM44:
 564 0084 60E0      		ldi r22,0
 565 0086 81E0      		ldi r24,lo8(1)
 566 0088 0E94 0000 		call LCDByte
 567 008c 1E01      		movw r2,r28
 568 008e F6E0      		ldi r31,6
 569 0090 2F0E      		add r2,r31
 570 0092 311C      		adc r3,__zero_reg__
 571               	.LBB134:
 180:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 181:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 182:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** while(1){
 183:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         byte = mfrc522_request(PICC_REQALL,str);
 184:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 185:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDHexDumpXY(0,0,byte);
 186:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         buttonRead();
 187:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 188:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         if(byte == CARD_FOUND)
 189:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         {
 190:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             byte = mfrc522_get_card_serial(str);
 191:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(byte == CARD_FOUND)
 192:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             {
 193:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);
 194:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 195:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 196:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 for(byte=0;byte<8;byte++){
 197:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     // LCDHexDumpXY(byte*2,0,str[byte]);
 198:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     //       LCDHexDumpXY(byte*2, 0, str[byte]);
 199:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                   //  LCDWriteString(" ");
 200:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                   
 201:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteInt(str[byte], -1);
 202:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(1000);
 203:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 204:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 205:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 206:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             else
 207:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             { //not a valid card found
 208:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteStringXY(0,1,"Error");
 209:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 210:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 211:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDWriteStringXY(0, 1, "Card Comparison");
 212:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(1000);
 213:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear(); //test
 214:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int i=0; i<5; i++){
 215:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);//test
 216:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //LCDWriteStringXY(0,0,"i:  ");                 // LCDWriteIntXY(5,0, i,1);//test
 217:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteInt(str[i], -1);//test
 218:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //   _delay_ms(1000);
 219:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 220:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(100);//test
 221:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();//test
 222:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 223:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int k=0;k<5 ;k++){
 224:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 // LCDHexDumpXY(byte*2,0,str[byte]);
 225:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //       LCDHexDumpXY(byte*2, 0, str[byte]);
 226:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteIntXY(0,1,str[k], -1);
 227:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 if(str[k] == card2[k] || str[k] == card1[k]) //this is where you are testing
 228:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 {
 229:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteIntXY(0,1,str[k], -1);
 230:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteString("MATCH"); //jk i am testing
 231:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     _delay_ms(50);
 232:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDClear();
 233:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = 1;
 234:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 235:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 else{
 236:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = -1;
 237:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 238:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 239:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end of for loop checking if valid card
 240:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(validCard == 1){
 241:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 242:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(500);
 243:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteString("SUCCESS");
 244:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 open();
 245:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 validCard=5;
 573               	.LM45:
 574 0094 25E0      		ldi r18,lo8(5)
 575 0096 422E      		mov r4,r18
 576 0098 512C      		mov r5,__zero_reg__
 577               	.LBB135:
 233:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 579               	.LM46:
 580 009a 6624      		clr r6
 581 009c 6394      		inc r6
 582 009e 712C      		mov r7,__zero_reg__
 583 00a0 4E01      		movw r8,r28
 584 00a2 29E0      		ldi r18,9
 585 00a4 820E      		add r8,r18
 586 00a6 911C      		adc r9,__zero_reg__
 587               	.L20:
 588               	.LBE135:
 589               	.LBE134:
 183:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 591               	.LM47:
 592 00a8 BE01      		movw r22,r28
 593 00aa 6F5F      		subi r22,-1
 594 00ac 7F4F      		sbci r23,-1
 595 00ae 82E5      		ldi r24,lo8(82)
 596 00b0 0E94 0000 		call mfrc522_request
 597 00b4 182F      		mov r17,r24
 185:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         buttonRead();
 599               	.LM48:
 600 00b6 482F      		mov r20,r24
 601 00b8 60E0      		ldi r22,0
 602 00ba 80E0      		ldi r24,0
 603 00bc 0E94 0000 		call LCDHexDumpXY
 186:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 605               	.LM49:
 606 00c0 0E94 0000 		call buttonRead
 188:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         {
 608               	.LM50:
 609 00c4 1130      		cpi r17,lo8(1)
 610 00c6 01F0      		breq .+2
 611 00c8 00C0      		rjmp .L9
 612               	.LBB159:
 190:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(byte == CARD_FOUND)
 614               	.LM51:
 615 00ca CE01      		movw r24,r28
 616 00cc 0196      		adiw r24,1
 617 00ce 0E94 0000 		call mfrc522_get_card_serial
 191:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             {
 619               	.LM52:
 620 00d2 8130      		cpi r24,lo8(1)
 621 00d4 01F0      		breq .+2
 622 00d6 00C0      		rjmp .L10
 623               	.LBB138:
 624               	.LBB139:
 626               	.Ltext23:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 628               	.LM53:
 629 00d8 8FE5      		ldi r24,lo8(-5537)
 630 00da 9AEE      		ldi r25,hi8(-5537)
 631 00dc 0197      	1:	sbiw r24,1
 632 00de 01F4      		brne 1b
 633 00e0 00C0      		rjmp .
 634 00e2 0000      		nop
 635               	.LBE139:
 636               	.LBE138:
 638               	.Ltext24:
 194:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 640               	.LM54:
 641 00e4 60E0      		ldi r22,0
 642 00e6 81E0      		ldi r24,lo8(1)
 643 00e8 0E94 0000 		call LCDByte
 644 00ec 8E01      		movw r16,r28
 645 00ee 0F5F      		subi r16,-1
 646 00f0 1F4F      		sbci r17,-1
 647               	.L11:
 201:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(1000);
 649               	.LM55:
 650 00f2 F801      		movw r30,r16
 651 00f4 8191      		ld r24,Z+
 652 00f6 8F01      		movw r16,r30
 653 00f8 6FEF      		ldi r22,lo8(-1)
 654 00fa 7FEF      		ldi r23,lo8(-1)
 655 00fc 90E0      		ldi r25,0
 656 00fe 0E94 0000 		call LCDWriteInt
 657               	.LBB140:
 658               	.LBB141:
 660               	.Ltext25:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 662               	.LM56:
 663 0102 FFEF      		ldi r31,lo8(1599999)
 664 0104 29E6      		ldi r18,hi8(1599999)
 665 0106 88E1      		ldi r24,hlo8(1599999)
 666 0108 F150      	1:	subi r31,1
 667 010a 2040      		sbci r18,0
 668 010c 8040      		sbci r24,0
 669 010e 01F4      		brne 1b
 670 0110 00C0      		rjmp .
 671 0112 0000      		nop
 672               	.LBE141:
 673               	.LBE140:
 675               	.Ltext26:
 196:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     // LCDHexDumpXY(byte*2,0,str[byte]);
 677               	.LM57:
 678 0114 0815      		cp r16,r8
 679 0116 1905      		cpc r17,r9
 680 0118 01F4      		brne .L11
 681               	.L12:
 211:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(1000);
 683               	.LM58:
 684 011a 61E0      		ldi r22,lo8(1)
 685 011c 80E0      		ldi r24,0
 686 011e 0E94 0000 		call LCDGotoXY
 687 0122 80E0      		ldi r24,lo8(.LC3)
 688 0124 90E0      		ldi r25,hi8(.LC3)
 689 0126 0E94 0000 		call LCDWriteString
 690               	.LBB142:
 691               	.LBB143:
 693               	.Ltext27:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 695               	.LM59:
 696 012a 9FEF      		ldi r25,lo8(1599999)
 697 012c E9E6      		ldi r30,hi8(1599999)
 698 012e F8E1      		ldi r31,hlo8(1599999)
 699 0130 9150      	1:	subi r25,1
 700 0132 E040      		sbci r30,0
 701 0134 F040      		sbci r31,0
 702 0136 01F4      		brne 1b
 703 0138 00C0      		rjmp .
 704 013a 0000      		nop
 705               	.LBE143:
 706               	.LBE142:
 708               	.Ltext28:
 213:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int i=0; i<5; i++){
 710               	.LM60:
 711 013c 60E0      		ldi r22,0
 712 013e 81E0      		ldi r24,lo8(1)
 713 0140 0E94 0000 		call LCDByte
 714 0144 8E01      		movw r16,r28
 715 0146 0F5F      		subi r16,-1
 716 0148 1F4F      		sbci r17,-1
 717 014a 7801      		movw r14,r16
 718               	.L13:
 719               	.LBB144:
 720               	.LBB145:
 721               	.LBB146:
 723               	.Ltext29:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 725               	.LM61:
 726 014c EFE5      		ldi r30,lo8(-5537)
 727 014e FAEE      		ldi r31,hi8(-5537)
 728 0150 3197      	1:	sbiw r30,1
 729 0152 01F4      		brne 1b
 730 0154 00C0      		rjmp .
 731 0156 0000      		nop
 732               	.LBE146:
 733               	.LBE145:
 735               	.Ltext30:
 217:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //   _delay_ms(1000);
 737               	.LM62:
 738 0158 F701      		movw r30,r14
 739 015a 8191      		ld r24,Z+
 740 015c 7F01      		movw r14,r30
 741 015e 6FEF      		ldi r22,lo8(-1)
 742 0160 7FEF      		ldi r23,lo8(-1)
 743 0162 90E0      		ldi r25,0
 744 0164 0E94 0000 		call LCDWriteInt
 214:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);//test
 746               	.LM63:
 747 0168 E214      		cp r14,r2
 748 016a F304      		cpc r15,r3
 749 016c 01F4      		brne .L13
 750               	.LBE144:
 751               	.LBB147:
 752               	.LBB148:
 754               	.Ltext31:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 756               	.LM64:
 757 016e FFEF      		ldi r31,lo8(159999)
 758 0170 20E7      		ldi r18,hi8(159999)
 759 0172 82E0      		ldi r24,hlo8(159999)
 760 0174 F150      	1:	subi r31,1
 761 0176 2040      		sbci r18,0
 762 0178 8040      		sbci r24,0
 763 017a 01F4      		brne 1b
 764 017c 00C0      		rjmp .
 765 017e 0000      		nop
 766               	.LBE148:
 767               	.LBE147:
 769               	.Ltext32:
 221:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 771               	.LM65:
 772 0180 60E0      		ldi r22,0
 773 0182 81E0      		ldi r24,lo8(1)
 774 0184 0E94 0000 		call LCDByte
 775 0188 80E0      		ldi r24,lo8(card2)
 776 018a A82E      		mov r10,r24
 777 018c 80E0      		ldi r24,hi8(card2)
 778 018e B82E      		mov r11,r24
 779 0190 90E0      		ldi r25,lo8(card1)
 780 0192 C92E      		mov r12,r25
 781 0194 90E0      		ldi r25,hi8(card1)
 782 0196 D92E      		mov r13,r25
 783               	.L17:
 784               	.LBB149:
 226:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 if(str[k] == card2[k] || str[k] == card1[k]) //this is where you are testing
 786               	.LM66:
 787 0198 61E0      		ldi r22,lo8(1)
 788 019a 80E0      		ldi r24,0
 789 019c 0E94 0000 		call LCDGotoXY
 790 01a0 F801      		movw r30,r16
 791 01a2 8081      		ld r24,Z
 792 01a4 6FEF      		ldi r22,lo8(-1)
 793 01a6 7FEF      		ldi r23,lo8(-1)
 794 01a8 90E0      		ldi r25,0
 795 01aa 0E94 0000 		call LCDWriteInt
 227:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 {
 797               	.LM67:
 798 01ae F801      		movw r30,r16
 799 01b0 8081      		ld r24,Z
 800 01b2 F501      		movw r30,r10
 801 01b4 9191      		ld r25,Z+
 802 01b6 5F01      		movw r10,r30
 803 01b8 8917      		cp r24,r25
 804 01ba 01F0      		breq .L14
 227:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 {
 806               	.LM68:
 807 01bc F601      		movw r30,r12
 808 01be 9081      		ld r25,Z
 809 01c0 8913      		cpse r24,r25
 810 01c2 00C0      		rjmp .L15
 811               	.L14:
 229:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteString("MATCH"); //jk i am testing
 813               	.LM69:
 814 01c4 61E0      		ldi r22,lo8(1)
 815 01c6 80E0      		ldi r24,0
 816 01c8 0E94 0000 		call LCDGotoXY
 817 01cc F801      		movw r30,r16
 818 01ce 8081      		ld r24,Z
 819 01d0 6FEF      		ldi r22,lo8(-1)
 820 01d2 7FEF      		ldi r23,lo8(-1)
 821 01d4 90E0      		ldi r25,0
 822 01d6 0E94 0000 		call LCDWriteInt
 230:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     _delay_ms(50);
 824               	.LM70:
 825 01da 80E0      		ldi r24,lo8(.LC4)
 826 01dc 90E0      		ldi r25,hi8(.LC4)
 827 01de 0E94 0000 		call LCDWriteString
 828               	.LBB136:
 829               	.LBB137:
 831               	.Ltext33:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 833               	.LM71:
 834 01e2 FFE7      		ldi r31,lo8(79999)
 835 01e4 28E3      		ldi r18,hi8(79999)
 836 01e6 81E0      		ldi r24,hlo8(79999)
 837 01e8 F150      	1:	subi r31,1
 838 01ea 2040      		sbci r18,0
 839 01ec 8040      		sbci r24,0
 840 01ee 01F4      		brne 1b
 841 01f0 00C0      		rjmp .
 842 01f2 0000      		nop
 843               	.LBE137:
 844               	.LBE136:
 846               	.Ltext34:
 232:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = 1;
 848               	.LM72:
 849 01f4 60E0      		ldi r22,0
 850 01f6 81E0      		ldi r24,lo8(1)
 851 01f8 0E94 0000 		call LCDByte
 233:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 853               	.LM73:
 854 01fc 7092 0000 		sts validCard+1,r7
 855 0200 6092 0000 		sts validCard,r6
 856               	.L16:
 857 0204 0F5F      		subi r16,-1
 858 0206 1F4F      		sbci r17,-1
 859 0208 9FEF      		ldi r25,-1
 860 020a C91A      		sub r12,r25
 861 020c D90A      		sbc r13,r25
 223:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 // LCDHexDumpXY(byte*2,0,str[byte]);
 863               	.LM74:
 864 020e 0E15      		cp r16,r14
 865 0210 1F05      		cpc r17,r15
 866 0212 01F4      		brne .L17
 867               	.LBE149:
 240:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 869               	.LM75:
 870 0214 8091 0000 		lds r24,validCard
 871 0218 9091 0000 		lds r25,validCard+1
 872 021c 0197      		sbiw r24,1
 873 021e 01F4      		brne .L18
 241:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(500);
 875               	.LM76:
 876 0220 60E0      		ldi r22,0
 877 0222 81E0      		ldi r24,lo8(1)
 878 0224 0E94 0000 		call LCDByte
 879               	.LBB150:
 880               	.LBB151:
 882               	.Ltext35:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 884               	.LM77:
 885 0228 EFEF      		ldi r30,lo8(799999)
 886 022a F4E3      		ldi r31,hi8(799999)
 887 022c 2CE0      		ldi r18,hlo8(799999)
 888 022e E150      	1:	subi r30,1
 889 0230 F040      		sbci r31,0
 890 0232 2040      		sbci r18,0
 891 0234 01F4      		brne 1b
 892 0236 00C0      		rjmp .
 893 0238 0000      		nop
 894               	.LBE151:
 895               	.LBE150:
 897               	.Ltext36:
 243:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 open();
 899               	.LM78:
 900 023a 80E0      		ldi r24,lo8(.LC5)
 901 023c 90E0      		ldi r25,hi8(.LC5)
 902 023e 0E94 0000 		call LCDWriteString
 244:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 validCard=5;
 904               	.LM79:
 905 0242 0E94 0000 		call open
 907               	.LM80:
 908 0246 5092 0000 		sts validCard+1,r5
 909 024a 4092 0000 		sts validCard,r4
 910               	.L18:
 246:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end if test worked
 247:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(validCard == -1){
 912               	.LM81:
 913 024e 8091 0000 		lds r24,validCard
 914 0252 9091 0000 		lds r25,validCard+1
 915 0256 0196      		adiw r24,1
 916 0258 01F4      		brne .L19
 248:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 918               	.LM82:
 919 025a 60E0      		ldi r22,0
 920 025c 81E0      		ldi r24,lo8(1)
 921 025e 0E94 0000 		call LCDByte
 922               	.LBB152:
 923               	.LBB153:
 925               	.Ltext37:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 927               	.LM83:
 928 0262 FFEF      		ldi r31,lo8(159999)
 929 0264 20E7      		ldi r18,hi8(159999)
 930 0266 82E0      		ldi r24,hlo8(159999)
 931 0268 F150      	1:	subi r31,1
 932 026a 2040      		sbci r18,0
 933 026c 8040      		sbci r24,0
 934 026e 01F4      		brne 1b
 935 0270 00C0      		rjmp .
 936 0272 0000      		nop
 937               	.LBE153:
 938               	.LBE152:
 940               	.Ltext38:
 249:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(100);
 250:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteString("not valid");
 942               	.LM84:
 943 0274 80E0      		ldi r24,lo8(.LC6)
 944 0276 90E0      		ldi r25,hi8(.LC6)
 945 0278 0E94 0000 		call LCDWriteString
 946               	.L19:
 947               	.LBB154:
 948               	.LBB155:
 950               	.Ltext39:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 952               	.LM85:
 953 027c 9FE7      		ldi r25,lo8(1199999)
 954 027e EFE4      		ldi r30,hi8(1199999)
 955 0280 F2E1      		ldi r31,hlo8(1199999)
 956 0282 9150      	1:	subi r25,1
 957 0284 E040      		sbci r30,0
 958 0286 F040      		sbci r31,0
 959 0288 01F4      		brne 1b
 960 028a 00C0      		rjmp .
 961 028c 0000      		nop
 962               	.LBE155:
 963               	.LBE154:
 965               	.Ltext40:
 251:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 close();
 252:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end of loop for checking valid card
 253:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 254:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(750);
 255:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();
 967               	.LM86:
 968 028e 60E0      		ldi r22,0
 969 0290 81E0      		ldi r24,lo8(1)
 970 0292 0E94 0000 		call LCDByte
 256:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDWriteString("CHECKED");
 972               	.LM87:
 973 0296 80E0      		ldi r24,lo8(.LC7)
 974 0298 90E0      		ldi r25,hi8(.LC7)
 975 029a 0E94 0000 		call LCDWriteString
 976               	.LBB156:
 977               	.LBB157:
 979               	.Ltext41:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 981               	.LM88:
 982 029e 2FE7      		ldi r18,lo8(399999)
 983 02a0 8AE1      		ldi r24,hi8(399999)
 984 02a2 96E0      		ldi r25,hlo8(399999)
 985 02a4 2150      	1:	subi r18,1
 986 02a6 8040      		sbci r24,0
 987 02a8 9040      		sbci r25,0
 988 02aa 01F4      		brne 1b
 989 02ac 00C0      		rjmp .
 990 02ae 0000      		nop
 991               	.LBE157:
 992               	.LBE156:
 994               	.Ltext42:
 257:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(250);
 258:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();
 996               	.LM89:
 997 02b0 60E0      		ldi r22,0
 998 02b2 81E0      		ldi r24,lo8(1)
 999 02b4 0E94 0000 		call LCDByte
 1000               	.L9:
 1001               	.LBE159:
 259:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             
 260:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         } //end of valid card found
 261:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 262:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDWriteStringXY(0,0,"Present Tag");
 1003               	.LM90:
 1004 02b8 60E0      		ldi r22,0
 1005 02ba 80E0      		ldi r24,0
 1006 02bc 0E94 0000 		call LCDGotoXY
 1007 02c0 80E0      		ldi r24,lo8(.LC8)
 1008 02c2 90E0      		ldi r25,hi8(.LC8)
 1009 02c4 0E94 0000 		call LCDWriteString
 183:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 1011               	.LM91:
 1012 02c8 00C0      		rjmp .L20
 1013               	.L10:
 1014               	.LBB160:
 208:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 1016               	.LM92:
 1017 02ca 61E0      		ldi r22,lo8(1)
 1018 02cc 80E0      		ldi r24,0
 1019 02ce 0E94 0000 		call LCDGotoXY
 1020 02d2 80E0      		ldi r24,lo8(.LC2)
 1021 02d4 90E0      		ldi r25,hi8(.LC2)
 1022 02d6 0E94 0000 		call LCDWriteString
 1023 02da 00C0      		rjmp .L12
 1024               	.L15:
 1025               	.LBB158:
 236:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 1027               	.LM93:
 1028 02dc 8FEF      		ldi r24,lo8(-1)
 1029 02de 9FEF      		ldi r25,lo8(-1)
 1030 02e0 9093 0000 		sts validCard+1,r25
 1031 02e4 8093 0000 		sts validCard,r24
 1032 02e8 00C0      		rjmp .L16
 1033               	.LBE158:
 1034               	.LBE160:
 1039               	.Lscope6:
 1040               	.global	validCard
 1041               		.data
 1044               	validCard:
 1045 0000 FEFF      		.word	-2
 1047               	.global	card2
 1050               	card2:
 1051 0002 40        		.byte	64
 1052 0003 EE        		.byte	-18
 1053 0004 DF        		.byte	-33
 1054 0005 87        		.byte	-121
 1055 0006 F6        		.byte	-10
 1057               	.global	card1
 1060               	card1:
 1061 0007 AE        		.byte	-82
 1062 0008 44        		.byte	68
 1063 0009 2D        		.byte	45
 1064 000a 5B        		.byte	91
 1065 000b 9C        		.byte	-100
 1067               		.comm	SelfTestBuffer,64,1
 1069               		.text
 1071               	.Letext0:
 1072               		.ident	"GCC: (GNU) 6.2.0"
 1073               	.global __do_copy_data
 1074               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:4      *ABS*:000000000000003f __SREG__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:111    .text:0000000000000000 initServo
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:167    .text:0000000000000026 open
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:283    .text:0000000000000080 close
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:301    .text:0000000000000086 initButton
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:333    .text:0000000000000098 buttonRead
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:452    .text.startup:0000000000000000 main
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:1050   .data:0000000000000002 card2
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:1060   .data:0000000000000007 card1
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccSLVOSh.s:1044   .data:0000000000000000 validCard
                            *COM*:0000000000000040 SelfTestBuffer

UNDEFINED SYMBOLS
LCDByte
LCDWriteString
LCDInit
LCDGotoXY
spi_init
mfrc522_init
mfrc522_request
LCDHexDumpXY
mfrc522_get_card_serial
LCDWriteInt
__do_copy_data
__do_clear_bss
