   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 109               	.global	initServo
 111               	initServo:
   1:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** /*
   2:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  correctly reading tags now.
   3:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  on 3/17 this was working.
   4:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
   5:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  I am modifying it now to see if i can get a servo to turn with a card read.
   6:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
   7:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  * main.c
   8:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  *
   9:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  * Copyright 2013 Shimon <shimon@monistit.com>
  10:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  11:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  base code from Shimon to get the spi and rfid working. I added the servo support and implimented s
  12:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  13:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  the AVR requires a .1uF capacitor on power and ground. Without it the avr would randomly restart. 
  14:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  15:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****  x*/
  16:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  17:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <avr/io.h>
  18:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <util/delay.h>
  19:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <lcd.h>
  20:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <utils.h>
  21:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <spi.h>
  22:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <mfrc522.h>
  23:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #include <string.h>
  24:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  25:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define BV(x) (1<<x)     // shifts bits by x. and sets the bit to 1 or 0 based on x 0 is zero shift
  26:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** #define ToggleBit(port, bit) (port ^= (1 << bit) //  toggles the bit by negating
  27:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  28:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  29:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  30:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** uint8_t SelfTestBuffer[64];
  31:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  32:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     /* === === ===    SERVO SETUP   === === === */
  33:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     /*
  34:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      pin PB1 using 16 bit timer
  35:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      Read servo example that I have in xcode.
  36:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  37:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      to move the servo to max:
  38:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  39:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  40:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      OCR1A = ICR1 - 2000; //18000
  41:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      _delay_ms(500);
  42:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  43:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      to move servo to min
  44:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      OCR1A = ICR1 - 1000; //1000 milisecond
  45:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      _delay_ms(500);
  46:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  47:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  48:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      cannot use timer 1 because its used for spi. so we have to use timer 2 or do all software
  49:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  50:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  51:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****      */
  52:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  53:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //void buttonInit(volatile uint8_t *port, int pin){
  54:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    
  55:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //}
  56:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  57:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //void buttonRead(){
  58:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    //button is hardware debounced.
  59:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //    
  60:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //}
  61:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  62:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //RFID constants
  63:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //holds id cards
  64:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** uint8_t card1[16] = {174,68,45,91,156}; //only 5 elements!!!
  65:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int validCard = -2;
  66:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  67:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** void initServo(){
 113               	.LM0:
 114               	.LFBB1:
 115               	/* prologue: function */
 116               	/* frame size = 0 */
 117               	/* stack size = 0 */
 118               	.L__stack_usage = 0
  68:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            //make A5 output.
  69:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            *ddr=BV(pin);      // PORTC declared as output 0xFF is all output 11111 so i have 8 b
  70:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //            *port=BV(pin);     // PORTC is initially LOW OFF the led initially /
  71:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //to do make the register parameter work
  72:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  73:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     DDRC = BV(5);
 120               	.LM1:
 121 0000 90E2      		ldi r25,lo8(32)
 122 0002 97B9      		out 0x7,r25
  74:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         //set to closed position
  75:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         PORTC = (BV(5));
 124               	.LM2:
 125 0004 98B9      		out 0x8,r25
 126               	.LBB78:
 127               	.LBB79:
 129               	.Ltext1:
   1:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** _delay_us(double __us)
 256:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	double __tmp ;
 258:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 262:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 263:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 264:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 274:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 131               	.LM3:
 132 0006 EFEC      		ldi r30,lo8(1999)
 133 0008 F7E0      		ldi r31,hi8(1999)
 134 000a 3197      	1:	sbiw r30,1
 135 000c 01F4      		brne 1b
 136 000e 00C0      		rjmp .
 137 0010 0000      		nop
 138               	.LBE79:
 139               	.LBE78:
 141               	.Ltext2:
  76:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_us(1000);
  77:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         PORTC   ^=BV(5);
 143               	.LM4:
 144 0012 88B1      		in r24,0x8
 145 0014 8927      		eor r24,r25
 146 0016 88B9      		out 0x8,r24
 147               	.LBB80:
 148               	.LBB81:
 150               	.Ltext3:
 152               	.LM5:
 153 0018 8FE6      		ldi r24,lo8(-27537)
 154 001a 94E9      		ldi r25,hi8(-27537)
 155 001c 0197      	1:	sbiw r24,1
 156 001e 01F4      		brne 1b
 157 0020 00C0      		rjmp .
 158 0022 0000      		nop
 159 0024 0895      		ret
 160               	.LBE81:
 161               	.LBE80:
 163               	.Lscope1:
 165               	.global	open
 167               	open:
 169               	.Ltext4:
  78:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_us(19000); //remember that total period is 2ms or 2k micros and you need to do it th
  79:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
  80:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
  81:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int open(){
 171               	.LM6:
 172               	.LFBB2:
 173               	/* prologue: function */
 174               	/* frame size = 0 */
 175               	/* stack size = 0 */
 176               	.L__stack_usage = 0
  82:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        *port = (uint8_t)(BV(pin)); //need to change this code to work
  83:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(2000);
  84:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port   ^=BV(pin);
  85:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(18000);
  86:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //
  87:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_ms(4000);
  88:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //
  89:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port = (BV(pin));
  90:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(1000);
  91:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //         *port   ^=BV(pin);
  92:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** //        _delay_us(19000);
  93:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
  94:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     PORTC = (BV(5));
 178               	.LM7:
 179 0026 80E2      		ldi r24,lo8(32)
 180 0028 88B9      		out 0x8,r24
 181               	.LBB82:
 182               	.LBB83:
 184               	.Ltext5:
 186               	.LM8:
 187 002a EFE9      		ldi r30,lo8(3999)
 188 002c FFE0      		ldi r31,hi8(3999)
 189 002e 3197      	1:	sbiw r30,1
 190 0030 01F4      		brne 1b
 191 0032 00C0      		rjmp .
 192 0034 0000      		nop
 193               	.LBE83:
 194               	.LBE82:
 196               	.Ltext6:
  95:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(2000);
  96:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC  ^=BV(5);
 198               	.LM9:
 199 0036 98B1      		in r25,0x8
 200 0038 9827      		eor r25,r24
 201 003a 98B9      		out 0x8,r25
 202               	.LBB84:
 203               	.LBB85:
 205               	.Ltext7:
 207               	.LM10:
 208 003c EFE9      		ldi r30,lo8(-29537)
 209 003e FCE8      		ldi r31,hi8(-29537)
 210 0040 3197      	1:	sbiw r30,1
 211 0042 01F4      		brne 1b
 212 0044 00C0      		rjmp .
 213 0046 0000      		nop
 214               	.LBE85:
 215               	.LBE84:
 216               	.LBB86:
 217               	.LBB87:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 219               	.LM11:
 220 0048 FFEF      		ldi r31,lo8(6399999)
 221 004a 27EA      		ldi r18,hi8(6399999)
 222 004c 31E6      		ldi r19,hlo8(6399999)
 223 004e F150      	1:	subi r31,1
 224 0050 2040      		sbci r18,0
 225 0052 3040      		sbci r19,0
 226 0054 01F4      		brne 1b
 227 0056 00C0      		rjmp .
 228 0058 0000      		nop
 229               	.LBE87:
 230               	.LBE86:
 232               	.Ltext8:
  97:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(18000);
  98:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
  99:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(4000);
 100:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     
 101:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC = (BV(5));
 234               	.LM12:
 235 005a 88B9      		out 0x8,r24
 236               	.LBB88:
 237               	.LBB89:
 239               	.Ltext9:
 241               	.LM13:
 242 005c EFEC      		ldi r30,lo8(1999)
 243 005e F7E0      		ldi r31,hi8(1999)
 244 0060 3197      	1:	sbiw r30,1
 245 0062 01F4      		brne 1b
 246 0064 00C0      		rjmp .
 247 0066 0000      		nop
 248               	.LBE89:
 249               	.LBE88:
 251               	.Ltext10:
 102:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(1000);
 103:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****    PORTC   ^=BV(5);
 253               	.LM14:
 254 0068 98B1      		in r25,0x8
 255 006a 8927      		eor r24,r25
 256 006c 88B9      		out 0x8,r24
 257               	.LBB90:
 258               	.LBB91:
 260               	.Ltext11:
 262               	.LM15:
 263 006e 8FE6      		ldi r24,lo8(-27537)
 264 0070 94E9      		ldi r25,hi8(-27537)
 265 0072 0197      	1:	sbiw r24,1
 266 0074 01F4      		brne 1b
 267 0076 00C0      		rjmp .
 268 0078 0000      		nop
 269               	.LBE91:
 270               	.LBE90:
 272               	.Ltext12:
 104:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_us(19000);
 105:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** return 1;
 106:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }
 274               	.LM16:
 275 007a 81E0      		ldi r24,lo8(1)
 276 007c 90E0      		ldi r25,0
 277 007e 0895      		ret
 279               	.Lscope2:
 281               	.global	close
 283               	close:
 107:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 108:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int close(void){
 285               	.LM17:
 286               	.LFBB3:
 287               	/* prologue: function */
 288               	/* frame size = 0 */
 289               	/* stack size = 0 */
 290               	.L__stack_usage = 0
 109:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //ToDo: need to update this
 110:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         return 1;
 111:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** }
 292               	.LM18:
 293 0080 81E0      		ldi r24,lo8(1)
 294 0082 90E0      		ldi r25,0
 295 0084 0895      		ret
 297               	.Lscope3:
 298               		.section	.rodata.str1.1,"aMS",@progbits,1
 299               	.LC0:
 300 0000 4543 454E 		.string	"ECEN1310 Door Opener"
 300      3133 3130 
 300      2044 6F6F 
 300      7220 4F70 
 300      656E 6572 
 301               	.LC1:
 302 0015 4D49 4641 		.string	"MIFARE RC522v2"
 302      5245 2052 
 302      4335 3232 
 302      7632 00
 303               	.LC2:
 304 0024 4465 7465 		.string	"Detected"
 304      6374 6564 
 304      00
 305               	.LC3:
 306 002d 4D49 4641 		.string	"MIFARE RC522v1"
 306      5245 2052 
 306      4335 3232 
 306      7631 00
 307               	.LC4:
 308 003c 4E6F 2072 		.string	"No reader found"
 308      6561 6465 
 308      7220 666F 
 308      756E 6400 
 309               	.LC5:
 310 004c 4572 726F 		.string	"Error"
 310      7200 
 311               	.LC6:
 312 0052 424F 5554 		.string	"BOUT TO CHECK"
 312      2054 4F20 
 312      4348 4543 
 312      4B00 
 313               	.LC7:
 314 0060 4D41 5443 		.string	"MATCH"
 314      4800 
 315               	.LC8:
 316 0066 5355 4343 		.string	"SUCCESS"
 316      4553 5300 
 317               	.LC9:
 318 006e 6E6F 7420 		.string	"not valid"
 318      7661 6C69 
 318      6400 
 319               	.LC10:
 320 0078 4348 4543 		.string	"CHECKED"
 320      4B45 4400 
 321               	.LC11:
 322 0080 7072 6573 		.string	"present card"
 322      656E 7420 
 322      6361 7264 
 322      00
 323               		.section	.text.startup,"ax",@progbits
 325               	.global	main
 327               	main:
 112:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** /* === === === END SERVO SETUP === === === */
 113:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 114:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 115:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 116:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** int main(void)
 117:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** {
 329               	.LM19:
 330               	.LFBB4:
 331 0000 CF93      		push r28
 332 0002 DF93      		push r29
 333 0004 CDB7      		in r28,__SP_L__
 334 0006 DEB7      		in r29,__SP_H__
 335 0008 6097      		sbiw r28,16
 336 000a 0FB6      		in __tmp_reg__,__SREG__
 337 000c F894      		cli
 338 000e DEBF      		out __SP_H__,r29
 339 0010 0FBE      		out __SREG__,__tmp_reg__
 340 0012 CDBF      		out __SP_L__,r28
 341               	/* prologue: function */
 342               	/* frame size = 16 */
 343               	/* stack size = 18 */
 344               	.L__stack_usage = 18
 118:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 119:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     initServo(PORTC, DDRC, 5); //make servo an output at pin 5
 346               	.LM20:
 347 0014 67B1      		in r22,0x7
 348 0016 88B1      		in r24,0x8
 349 0018 70E0      		ldi r23,0
 350 001a 45E0      		ldi r20,lo8(5)
 351 001c 50E0      		ldi r21,0
 352 001e 90E0      		ldi r25,0
 353 0020 0E94 0000 		call initServo
 354               	.LBB92:
 355               	.LBB93:
 357               	.Ltext13:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 359               	.LM21:
 360 0024 2FE7      		ldi r18,lo8(79999)
 361 0026 88E3      		ldi r24,hi8(79999)
 362 0028 91E0      		ldi r25,hlo8(79999)
 363 002a 2150      	1:	subi r18,1
 364 002c 8040      		sbci r24,0
 365 002e 9040      		sbci r25,0
 366 0030 01F4      		brne 1b
 367 0032 00C0      		rjmp .
 368 0034 0000      		nop
 369               	.LBE93:
 370               	.LBE92:
 372               	.Ltext14:
 120:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 121:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     uint8_t byte;
 122:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     uint8_t str[MAX_LEN];
 123:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(50);
 124:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDInit(LS_BLINK);
 374               	.LM22:
 375 0036 81E0      		ldi r24,lo8(1)
 376 0038 0E94 0000 		call LCDInit
 125:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDWriteStringXY(2,0,"ECEN1310 Door Opener");
 378               	.LM23:
 379 003c 60E0      		ldi r22,0
 380 003e 82E0      		ldi r24,lo8(2)
 381 0040 0E94 0000 		call LCDGotoXY
 382 0044 80E0      		ldi r24,lo8(.LC0)
 383 0046 90E0      		ldi r25,hi8(.LC0)
 384 0048 0E94 0000 		call LCDWriteString
 126:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 127:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     spi_init(); //start communication for rfid
 386               	.LM24:
 387 004c 0E94 0000 		call spi_init
 388               	.LBB94:
 389               	.LBB95:
 391               	.Ltext15:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 393               	.LM25:
 394 0050 EFEF      		ldi r30,lo8(1599999)
 395 0052 F9E6      		ldi r31,hi8(1599999)
 396 0054 28E1      		ldi r18,hlo8(1599999)
 397 0056 E150      	1:	subi r30,1
 398 0058 F040      		sbci r31,0
 399 005a 2040      		sbci r18,0
 400 005c 01F4      		brne 1b
 401 005e 00C0      		rjmp .
 402 0060 0000      		nop
 403               	.LBE95:
 404               	.LBE94:
 406               	.Ltext16:
 128:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(1000);
 129:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDClear();
 408               	.LM26:
 409 0062 60E0      		ldi r22,0
 410 0064 81E0      		ldi r24,lo8(1)
 411 0066 0E94 0000 		call LCDByte
 130:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 131:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     open();
 413               	.LM27:
 414 006a 0E94 0000 		call open
 132:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     close();
 133:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 134:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //init reader
 135:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     mfrc522_init();
 416               	.LM28:
 417 006e 0E94 0000 		call mfrc522_init
 136:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 137:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     //check version of the reader
 138:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     byte = mfrc522_read(VersionReg);
 419               	.LM29:
 420 0072 87E3      		ldi r24,lo8(55)
 421 0074 0E94 0000 		call mfrc522_read
 139:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     if(byte == 0x92)
 423               	.LM30:
 424 0078 8239      		cpi r24,lo8(-110)
 425 007a 01F0      		breq .+2
 426 007c 00C0      		rjmp .L5
 140:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     {
 141:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteStringXY(2,0,"MIFARE RC522v2");
 428               	.LM31:
 429 007e 60E0      		ldi r22,0
 430 0080 82E0      		ldi r24,lo8(2)
 431 0082 0E94 0000 		call LCDGotoXY
 432 0086 80E0      		ldi r24,lo8(.LC1)
 433 0088 90E0      		ldi r25,hi8(.LC1)
 434               	.L23:
 142:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteStringXY(4,1,"Detected");
 143:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }else if(byte == 0x91 || byte==0x90)
 144:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     {
 145:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteStringXY(2,0,"MIFARE RC522v1");
 436               	.LM32:
 437 008a 0E94 0000 		call LCDWriteString
 146:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteStringXY(4,1,"Detected");
 439               	.LM33:
 440 008e 61E0      		ldi r22,lo8(1)
 441 0090 84E0      		ldi r24,lo8(4)
 442 0092 0E94 0000 		call LCDGotoXY
 443 0096 80E0      		ldi r24,lo8(.LC2)
 444 0098 90E0      		ldi r25,hi8(.LC2)
 445               	.L22:
 147:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }else
 148:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     {
 149:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteStringXY(0,0,"No reader found");
 447               	.LM34:
 448 009a 0E94 0000 		call LCDWriteString
 150:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }
 151:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 152:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     byte = mfrc522_read(ComIEnReg);
 450               	.LM35:
 451 009e 82E0      		ldi r24,lo8(2)
 452 00a0 0E94 0000 		call mfrc522_read
 153:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     mfrc522_write(ComIEnReg,byte|0x20);
 454               	.LM36:
 455 00a4 682F      		mov r22,r24
 456 00a6 6062      		ori r22,lo8(32)
 457 00a8 82E0      		ldi r24,lo8(2)
 458 00aa 0E94 0000 		call mfrc522_write
 154:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     byte = mfrc522_read(DivIEnReg);
 460               	.LM37:
 461 00ae 83E0      		ldi r24,lo8(3)
 462 00b0 0E94 0000 		call mfrc522_read
 155:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     mfrc522_write(DivIEnReg,byte|0x80);
 464               	.LM38:
 465 00b4 682F      		mov r22,r24
 466 00b6 6068      		ori r22,lo8(-128)
 467 00b8 83E0      		ldi r24,lo8(3)
 468 00ba 0E94 0000 		call mfrc522_write
 469               	.LBB96:
 470               	.LBB97:
 472               	.Ltext17:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 474               	.LM39:
 475 00be 8FEF      		ldi r24,lo8(2399999)
 476 00c0 9EE9      		ldi r25,hi8(2399999)
 477 00c2 E4E2      		ldi r30,hlo8(2399999)
 478 00c4 8150      	1:	subi r24,1
 479 00c6 9040      		sbci r25,0
 480 00c8 E040      		sbci r30,0
 481 00ca 01F4      		brne 1b
 482 00cc 00C0      		rjmp .
 483 00ce 0000      		nop
 484               	.LBE97:
 485               	.LBE96:
 487               	.Ltext18:
 156:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 157:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     _delay_ms(1500);
 158:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     LCDClear();
 489               	.LM40:
 490 00d0 60E0      		ldi r22,0
 491 00d2 81E0      		ldi r24,lo8(1)
 492 00d4 0E94 0000 		call LCDByte
 493 00d8 2E01      		movw r4,r28
 494 00da F6E0      		ldi r31,6
 495 00dc 4F0E      		add r4,r31
 496 00de 511C      		adc r5,__zero_reg__
 497               	.LBB98:
 159:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 160:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 161:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** while(1){
 162:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         byte = mfrc522_request(PICC_REQALL,str);
 163:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDHexDumpXY(0,0,byte);
 164:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 165:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         if(byte == CARD_FOUND)
 166:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         {
 167:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             byte = mfrc522_get_card_serial(str);
 168:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(byte == CARD_FOUND)
 169:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             {
 170:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);
 171:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 172:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 173:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 for(byte=0;byte<8;byte++)
 174:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     // LCDHexDumpXY(byte*2,0,str[byte]);
 175:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     //       LCDHexDumpXY(byte*2, 0, str[byte]);
 176:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteInt(str[byte], -1);
 177:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 178:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 179:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             else
 180:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             { //not a valid card found
 181:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteStringXY(0,1,"Error");
 182:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 183:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 184:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDWriteStringXY(0, 1, "BOUT TO CHECK");
 185:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(1000);
 186:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear(); //test
 187:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int i=0; i<5; i++){
 188:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);//test
 189:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //LCDWriteStringXY(0,0,"i:  ");
 190:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 // LCDWriteIntXY(5,0, i,1);//test
 191:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteInt(str[i], -1);//test
 192:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //   _delay_ms(1000);
 193:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 194:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(100);//test
 195:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();//test
 196:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 197:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int k=0;k<5 ;k++){
 198:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 // LCDHexDumpXY(byte*2,0,str[byte]);
 199:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //       LCDHexDumpXY(byte*2, 0, str[byte]);
 200:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteIntXY(0,1,str[k], -1);
 201:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 if(str[k] == card1[k]) //this is where you are testing
 202:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 {
 203:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteIntXY(0,1,str[k], -1);
 204:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteString("MATCH"); //jk i am testing
 205:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     _delay_ms(50);
 206:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDClear();
 207:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = 1;
 208:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 209:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 else{
 210:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = -1;
 211:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 212:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 213:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end of for loop checking if valid card
 214:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(validCard == 1){
 215:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 216:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(500);
 217:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteString("SUCCESS");
 218:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 open();
 219:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 validCard=5;
 499               	.LM41:
 500 00e0 95E0      		ldi r25,lo8(5)
 501 00e2 692E      		mov r6,r25
 502 00e4 712C      		mov r7,__zero_reg__
 503               	.LBB99:
 207:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 505               	.LM42:
 506 00e6 AA24      		clr r10
 507 00e8 A394      		inc r10
 508 00ea B12C      		mov r11,__zero_reg__
 509 00ec 4E01      		movw r8,r28
 510 00ee 29E0      		ldi r18,9
 511 00f0 820E      		add r8,r18
 512 00f2 911C      		adc r9,__zero_reg__
 513               	.L18:
 514               	.LBE99:
 515               	.LBE98:
 162:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDHexDumpXY(0,0,byte);
 517               	.LM43:
 518 00f4 BE01      		movw r22,r28
 519 00f6 6F5F      		subi r22,-1
 520 00f8 7F4F      		sbci r23,-1
 521 00fa 82E5      		ldi r24,lo8(82)
 522 00fc 0E94 0000 		call mfrc522_request
 523 0100 182F      		mov r17,r24
 163:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 525               	.LM44:
 526 0102 482F      		mov r20,r24
 527 0104 60E0      		ldi r22,0
 528 0106 80E0      		ldi r24,0
 529 0108 0E94 0000 		call LCDHexDumpXY
 165:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         {
 531               	.LM45:
 532 010c 1130      		cpi r17,lo8(1)
 533 010e 01F0      		breq .+2
 534 0110 00C0      		rjmp .L8
 535               	.LBB121:
 167:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(byte == CARD_FOUND)
 537               	.LM46:
 538 0112 CE01      		movw r24,r28
 539 0114 0196      		adiw r24,1
 540 0116 0E94 0000 		call mfrc522_get_card_serial
 168:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             {
 542               	.LM47:
 543 011a 8130      		cpi r24,lo8(1)
 544 011c 01F0      		breq .+2
 545 011e 00C0      		rjmp .L9
 546               	.LBB102:
 547               	.LBB103:
 549               	.Ltext19:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 551               	.LM48:
 552 0120 8FE5      		ldi r24,lo8(-5537)
 553 0122 9AEE      		ldi r25,hi8(-5537)
 554 0124 0197      	1:	sbiw r24,1
 555 0126 01F4      		brne 1b
 556 0128 00C0      		rjmp .
 557 012a 0000      		nop
 558               	.LBE103:
 559               	.LBE102:
 561               	.Ltext20:
 171:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 563               	.LM49:
 564 012c 60E0      		ldi r22,0
 565 012e 81E0      		ldi r24,lo8(1)
 566 0130 0E94 0000 		call LCDByte
 567 0134 8E01      		movw r16,r28
 568 0136 0F5F      		subi r16,-1
 569 0138 1F4F      		sbci r17,-1
 570               	.L10:
 176:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 572               	.LM50:
 573 013a F801      		movw r30,r16
 574 013c 8191      		ld r24,Z+
 575 013e 8F01      		movw r16,r30
 576 0140 6FEF      		ldi r22,lo8(-1)
 577 0142 7FEF      		ldi r23,lo8(-1)
 578 0144 90E0      		ldi r25,0
 579 0146 0E94 0000 		call LCDWriteInt
 173:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     // LCDHexDumpXY(byte*2,0,str[byte]);
 581               	.LM51:
 582 014a 0815      		cp r16,r8
 583 014c 1905      		cpc r17,r9
 584 014e 01F4      		brne .L10
 585               	.L11:
 184:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(1000);
 587               	.LM52:
 588 0150 61E0      		ldi r22,lo8(1)
 589 0152 80E0      		ldi r24,0
 590 0154 0E94 0000 		call LCDGotoXY
 591 0158 80E0      		ldi r24,lo8(.LC6)
 592 015a 90E0      		ldi r25,hi8(.LC6)
 593 015c 0E94 0000 		call LCDWriteString
 594               	.LBB104:
 595               	.LBB105:
 597               	.Ltext21:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 599               	.LM53:
 600 0160 FFEF      		ldi r31,lo8(1599999)
 601 0162 29E6      		ldi r18,hi8(1599999)
 602 0164 88E1      		ldi r24,hlo8(1599999)
 603 0166 F150      	1:	subi r31,1
 604 0168 2040      		sbci r18,0
 605 016a 8040      		sbci r24,0
 606 016c 01F4      		brne 1b
 607 016e 00C0      		rjmp .
 608 0170 0000      		nop
 609               	.LBE105:
 610               	.LBE104:
 612               	.Ltext22:
 186:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             for(int i=0; i<5; i++){
 614               	.LM54:
 615 0172 60E0      		ldi r22,0
 616 0174 81E0      		ldi r24,lo8(1)
 617 0176 0E94 0000 		call LCDByte
 618 017a 8E01      		movw r16,r28
 619 017c 0F5F      		subi r16,-1
 620 017e 1F4F      		sbci r17,-1
 621 0180 7801      		movw r14,r16
 622               	.L12:
 623               	.LBB106:
 624               	.LBB107:
 625               	.LBB108:
 627               	.Ltext23:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 629               	.LM55:
 630 0182 8FE5      		ldi r24,lo8(-5537)
 631 0184 9AEE      		ldi r25,hi8(-5537)
 632 0186 0197      	1:	sbiw r24,1
 633 0188 01F4      		brne 1b
 634 018a 00C0      		rjmp .
 635 018c 0000      		nop
 636               	.LBE108:
 637               	.LBE107:
 639               	.Ltext24:
 191:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 //   _delay_ms(1000);
 641               	.LM56:
 642 018e F701      		movw r30,r14
 643 0190 8191      		ld r24,Z+
 644 0192 7F01      		movw r14,r30
 645 0194 6FEF      		ldi r22,lo8(-1)
 646 0196 7FEF      		ldi r23,lo8(-1)
 647 0198 90E0      		ldi r25,0
 648 019a 0E94 0000 		call LCDWriteInt
 187:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(30);//test
 650               	.LM57:
 651 019e E414      		cp r14,r4
 652 01a0 F504      		cpc r15,r5
 653 01a2 01F4      		brne .L12
 654               	.LBE106:
 655               	.LBB109:
 656               	.LBB110:
 658               	.Ltext25:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 660               	.LM58:
 661 01a4 FFEF      		ldi r31,lo8(159999)
 662 01a6 20E7      		ldi r18,hi8(159999)
 663 01a8 82E0      		ldi r24,hlo8(159999)
 664 01aa F150      	1:	subi r31,1
 665 01ac 2040      		sbci r18,0
 666 01ae 8040      		sbci r24,0
 667 01b0 01F4      		brne 1b
 668 01b2 00C0      		rjmp .
 669 01b4 0000      		nop
 670               	.LBE110:
 671               	.LBE109:
 673               	.Ltext26:
 195:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 675               	.LM59:
 676 01b6 60E0      		ldi r22,0
 677 01b8 81E0      		ldi r24,lo8(1)
 678 01ba 0E94 0000 		call LCDByte
 679 01be 80E0      		ldi r24,lo8(card1)
 680 01c0 C82E      		mov r12,r24
 681 01c2 80E0      		ldi r24,hi8(card1)
 682 01c4 D82E      		mov r13,r24
 683               	.L15:
 684               	.LBB111:
 200:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 if(str[k] == card1[k]) //this is where you are testing
 686               	.LM60:
 687 01c6 61E0      		ldi r22,lo8(1)
 688 01c8 80E0      		ldi r24,0
 689 01ca 0E94 0000 		call LCDGotoXY
 690 01ce F801      		movw r30,r16
 691 01d0 8081      		ld r24,Z
 692 01d2 6FEF      		ldi r22,lo8(-1)
 693 01d4 7FEF      		ldi r23,lo8(-1)
 694 01d6 90E0      		ldi r25,0
 695 01d8 0E94 0000 		call LCDWriteInt
 201:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 {
 697               	.LM61:
 698 01dc F601      		movw r30,r12
 699 01de 8191      		ld r24,Z+
 700 01e0 6F01      		movw r12,r30
 701 01e2 F801      		movw r30,r16
 702 01e4 9081      		ld r25,Z
 703 01e6 9813      		cpse r25,r24
 704 01e8 00C0      		rjmp .L13
 203:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     LCDWriteString("MATCH"); //jk i am testing
 706               	.LM62:
 707 01ea 61E0      		ldi r22,lo8(1)
 708 01ec 80E0      		ldi r24,0
 709 01ee 0E94 0000 		call LCDGotoXY
 710 01f2 F801      		movw r30,r16
 711 01f4 8081      		ld r24,Z
 712 01f6 6FEF      		ldi r22,lo8(-1)
 713 01f8 7FEF      		ldi r23,lo8(-1)
 714 01fa 90E0      		ldi r25,0
 715 01fc 0E94 0000 		call LCDWriteInt
 204:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     _delay_ms(50);
 717               	.LM63:
 718 0200 80E0      		ldi r24,lo8(.LC7)
 719 0202 90E0      		ldi r25,hi8(.LC7)
 720 0204 0E94 0000 		call LCDWriteString
 721               	.LBB100:
 722               	.LBB101:
 724               	.Ltext27:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 726               	.LM64:
 727 0208 FFE7      		ldi r31,lo8(79999)
 728 020a 28E3      		ldi r18,hi8(79999)
 729 020c 81E0      		ldi r24,hlo8(79999)
 730 020e F150      	1:	subi r31,1
 731 0210 2040      		sbci r18,0
 732 0212 8040      		sbci r24,0
 733 0214 01F4      		brne 1b
 734 0216 00C0      		rjmp .
 735 0218 0000      		nop
 736               	.LBE101:
 737               	.LBE100:
 739               	.Ltext28:
 206:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                     validCard = 1;
 741               	.LM65:
 742 021a 60E0      		ldi r22,0
 743 021c 81E0      		ldi r24,lo8(1)
 744 021e 0E94 0000 		call LCDByte
 207:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 746               	.LM66:
 747 0222 B092 0000 		sts validCard+1,r11
 748 0226 A092 0000 		sts validCard,r10
 749               	.L14:
 750 022a 0F5F      		subi r16,-1
 751 022c 1F4F      		sbci r17,-1
 197:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 // LCDHexDumpXY(byte*2,0,str[byte]);
 753               	.LM67:
 754 022e 0E15      		cp r16,r14
 755 0230 1F05      		cpc r17,r15
 756 0232 01F4      		brne .L15
 757               	.LBE111:
 214:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 759               	.LM68:
 760 0234 8091 0000 		lds r24,validCard
 761 0238 9091 0000 		lds r25,validCard+1
 762 023c 0197      		sbiw r24,1
 763 023e 01F4      		brne .L16
 215:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(500);
 765               	.LM69:
 766 0240 60E0      		ldi r22,0
 767 0242 81E0      		ldi r24,lo8(1)
 768 0244 0E94 0000 		call LCDByte
 769               	.LBB112:
 770               	.LBB113:
 772               	.Ltext29:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 774               	.LM70:
 775 0248 9FEF      		ldi r25,lo8(799999)
 776 024a E4E3      		ldi r30,hi8(799999)
 777 024c FCE0      		ldi r31,hlo8(799999)
 778 024e 9150      	1:	subi r25,1
 779 0250 E040      		sbci r30,0
 780 0252 F040      		sbci r31,0
 781 0254 01F4      		brne 1b
 782 0256 00C0      		rjmp .
 783 0258 0000      		nop
 784               	.LBE113:
 785               	.LBE112:
 787               	.Ltext30:
 217:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 open();
 789               	.LM71:
 790 025a 80E0      		ldi r24,lo8(.LC8)
 791 025c 90E0      		ldi r25,hi8(.LC8)
 792 025e 0E94 0000 		call LCDWriteString
 218:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 validCard=5;
 794               	.LM72:
 795 0262 0E94 0000 		call open
 797               	.LM73:
 798 0266 7092 0000 		sts validCard+1,r7
 799 026a 6092 0000 		sts validCard,r6
 800               	.L16:
 220:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end if test worked
 221:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             if(validCard == -1){
 802               	.LM74:
 803 026e 8091 0000 		lds r24,validCard
 804 0272 9091 0000 		lds r25,validCard+1
 805 0276 0196      		adiw r24,1
 806 0278 01F4      		brne .L17
 222:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDClear();
 808               	.LM75:
 809 027a 60E0      		ldi r22,0
 810 027c 81E0      		ldi r24,lo8(1)
 811 027e 0E94 0000 		call LCDByte
 812               	.LBB114:
 813               	.LBB115:
 815               	.Ltext31:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 817               	.LM76:
 818 0282 8FEF      		ldi r24,lo8(159999)
 819 0284 90E7      		ldi r25,hi8(159999)
 820 0286 E2E0      		ldi r30,hlo8(159999)
 821 0288 8150      	1:	subi r24,1
 822 028a 9040      		sbci r25,0
 823 028c E040      		sbci r30,0
 824 028e 01F4      		brne 1b
 825 0290 00C0      		rjmp .
 826 0292 0000      		nop
 827               	.LBE115:
 828               	.LBE114:
 830               	.Ltext32:
 223:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 _delay_ms(100);
 224:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 LCDWriteString("not valid");
 832               	.LM77:
 833 0294 80E0      		ldi r24,lo8(.LC9)
 834 0296 90E0      		ldi r25,hi8(.LC9)
 835 0298 0E94 0000 		call LCDWriteString
 836               	.L17:
 837               	.LBB116:
 838               	.LBB117:
 840               	.Ltext33:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 842               	.LM78:
 843 029c FFE7      		ldi r31,lo8(1199999)
 844 029e 2FE4      		ldi r18,hi8(1199999)
 845 02a0 82E1      		ldi r24,hlo8(1199999)
 846 02a2 F150      	1:	subi r31,1
 847 02a4 2040      		sbci r18,0
 848 02a6 8040      		sbci r24,0
 849 02a8 01F4      		brne 1b
 850 02aa 00C0      		rjmp .
 851 02ac 0000      		nop
 852               	.LBE117:
 853               	.LBE116:
 855               	.Ltext34:
 225:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 close();
 226:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             } //end of loop for checking valid card
 227:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 228:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(750);
 229:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();
 857               	.LM79:
 858 02ae 60E0      		ldi r22,0
 859 02b0 81E0      		ldi r24,lo8(1)
 860 02b2 0E94 0000 		call LCDByte
 230:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDWriteString("CHECKED");
 862               	.LM80:
 863 02b6 80E0      		ldi r24,lo8(.LC10)
 864 02b8 90E0      		ldi r25,hi8(.LC10)
 865 02ba 0E94 0000 		call LCDWriteString
 866               	.LBB118:
 867               	.LBB119:
 869               	.Ltext35:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 871               	.LM81:
 872 02be 9FE7      		ldi r25,lo8(399999)
 873 02c0 EAE1      		ldi r30,hi8(399999)
 874 02c2 F6E0      		ldi r31,hlo8(399999)
 875 02c4 9150      	1:	subi r25,1
 876 02c6 E040      		sbci r30,0
 877 02c8 F040      		sbci r31,0
 878 02ca 01F4      		brne 1b
 879 02cc 00C0      		rjmp .
 880 02ce 0000      		nop
 881               	.LBE119:
 882               	.LBE118:
 884               	.Ltext36:
 231:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             _delay_ms(250);
 232:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             LCDClear();
 886               	.LM82:
 887 02d0 60E0      		ldi r22,0
 888 02d2 81E0      		ldi r24,lo8(1)
 889 02d4 0E94 0000 		call LCDByte
 890               	.L8:
 891               	.LBE121:
 233:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         } //end of valid card found
 234:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c **** 
 235:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteString("present card");
 893               	.LM83:
 894 02d8 80E0      		ldi r24,lo8(.LC11)
 895 02da 90E0      		ldi r25,hi8(.LC11)
 896 02dc 0E94 0000 		call LCDWriteString
 897               	.LBB122:
 898               	.LBB123:
 900               	.Ltext37:
 187:/usr/local/Cellar/avr-gcc/6.2.0/avr/include/util/delay.h **** 
 902               	.LM84:
 903 02e0 2FEF      		ldi r18,lo8(1599999)
 904 02e2 89E6      		ldi r24,hi8(1599999)
 905 02e4 98E1      		ldi r25,hlo8(1599999)
 906 02e6 2150      	1:	subi r18,1
 907 02e8 8040      		sbci r24,0
 908 02ea 9040      		sbci r25,0
 909 02ec 01F4      		brne 1b
 910 02ee 00C0      		rjmp .
 911 02f0 0000      		nop
 912               	.LBE123:
 913               	.LBE122:
 915               	.Ltext38:
 236:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         _delay_ms(1000);
 237:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDClear();
 917               	.LM85:
 918 02f2 60E0      		ldi r22,0
 919 02f4 81E0      		ldi r24,lo8(1)
 920 02f6 0E94 0000 		call LCDByte
 162:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDHexDumpXY(0,0,byte);
 922               	.LM86:
 923 02fa 00C0      		rjmp .L18
 924               	.L5:
 143:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     {
 926               	.LM87:
 927 02fc 8059      		subi r24,lo8(-(112))
 145:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteStringXY(4,1,"Detected");
 929               	.LM88:
 930 02fe 60E0      		ldi r22,0
 143:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     {
 932               	.LM89:
 933 0300 8230      		cpi r24,lo8(2)
 934 0302 00F4      		brsh .L7
 145:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****         LCDWriteStringXY(4,1,"Detected");
 936               	.LM90:
 937 0304 82E0      		ldi r24,lo8(2)
 938 0306 0E94 0000 		call LCDGotoXY
 939 030a 80E0      		ldi r24,lo8(.LC3)
 940 030c 90E0      		ldi r25,hi8(.LC3)
 941 030e 00C0      		rjmp .L23
 942               	.L7:
 149:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****     }
 944               	.LM91:
 945 0310 80E0      		ldi r24,0
 946 0312 0E94 0000 		call LCDGotoXY
 947 0316 80E0      		ldi r24,lo8(.LC4)
 948 0318 90E0      		ldi r25,hi8(.LC4)
 949 031a 00C0      		rjmp .L22
 950               	.L9:
 951               	.LBB124:
 181:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****             }
 953               	.LM92:
 954 031c 61E0      		ldi r22,lo8(1)
 955 031e 80E0      		ldi r24,0
 956 0320 0E94 0000 		call LCDGotoXY
 957 0324 80E0      		ldi r24,lo8(.LC5)
 958 0326 90E0      		ldi r25,hi8(.LC5)
 959 0328 0E94 0000 		call LCDWriteString
 960 032c 00C0      		rjmp .L11
 961               	.L13:
 962               	.LBB120:
 210:/Users/kevinKuwata1/Documents/xcode/ECEN1310Final/Mifare_SERVO/Mifare_SERVO/main.c ****                 }
 964               	.LM93:
 965 032e 8FEF      		ldi r24,lo8(-1)
 966 0330 9FEF      		ldi r25,lo8(-1)
 967 0332 9093 0000 		sts validCard+1,r25
 968 0336 8093 0000 		sts validCard,r24
 969 033a 00C0      		rjmp .L14
 970               	.LBE120:
 971               	.LBE124:
 976               	.Lscope4:
 977               	.global	validCard
 978               		.data
 981               	validCard:
 982 0000 FEFF      		.word	-2
 984               	.global	card1
 987               	card1:
 988 0002 AE        		.byte	-82
 989 0003 44        		.byte	68
 990 0004 2D        		.byte	45
 991 0005 5B        		.byte	91
 992 0006 9C        		.byte	-100
 993 0007 0000 0000 		.zero	11
 993      0000 0000 
 993      0000 00
 995               		.comm	SelfTestBuffer,64,1
 997               		.text
 999               	.Letext0:
 1000               		.ident	"GCC: (GNU) 6.2.0"
 1001               	.global __do_copy_data
 1002               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:4      *ABS*:000000000000003f __SREG__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:111    .text:0000000000000000 initServo
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:167    .text:0000000000000026 open
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:283    .text:0000000000000080 close
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:327    .text.startup:0000000000000000 main
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:987    .data:0000000000000002 card1
/var/folders/lm/s_klhqwn77z639t7_2gx62rr0000gn/T//ccXx9U6u.s:981    .data:0000000000000000 validCard
                            *COM*:0000000000000040 SelfTestBuffer

UNDEFINED SYMBOLS
LCDInit
LCDGotoXY
LCDWriteString
spi_init
LCDByte
mfrc522_init
mfrc522_read
mfrc522_write
mfrc522_request
LCDHexDumpXY
mfrc522_get_card_serial
LCDWriteInt
__do_copy_data
__do_clear_bss
